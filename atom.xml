<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>下载世界</title>
  
  
  <link href="http://v2rayhome.github.io/atom.xml" rel="self"/>
  
  <link href="http://v2rayhome.github.io/"/>
  <updated>2024-04-09T12:40:57.049Z</updated>
  <id>http://v2rayhome.github.io/</id>
  
  <author>
    <name>下载王</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2024香港银行卡开户总结，最新香港银行卡开户教程</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-138/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-138/</id>
    <published>2024-04-09T08:54:48.000Z</published>
    <updated>2024-04-09T12:40:57.049Z</updated>
    
    <content type="html"><![CDATA[<p>2024香港银行卡开户总结</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/cHBiNQF7n3eboEw.png" alt="image.png"></p><p>2024 年 4 月香港银行卡开户总结是一位v2社区的网友总结的，开了 6 张卡，一天内开了 5 张，流程总结的笔记详细，包括过关、准备资料等等，对香港银行卡开户感兴趣的同学可以前前往学习。</p><p>📽️说说我的经历：<br>开了 6 张卡，一天内开了 5 张，实际还挺累的。但是这些只是我的经历。<br>➡️ 中银香港<br>➡️ 香港汇丰<br>➡️ 工银亚洲<br>➡️ 招商永隆<br>➡️ 南洋商业银行<br>➡️ 恒生银行</p><p>☎️准备<br>➡️ 3 月就关注好了香港公众假期，各家银行营业时间，确定了清明 8 天假期，4 月 2 号办理、4 月 3 号补漏。<br>➡️ 提前预约，除了汇丰提前一周预约没有约上，其它几家银行我每家都有预约或者申请，每家办理都很丝滑。<br>➡️ 提前做好了功课，预约了相互临近的分行。除了工银亚洲我预约的远一些，其它几家都是相互步行最多 10 分钟以内就到的。我每家分行都提前在 Google 地图上标记收藏了地点，预估了银行之间的线路，在 Notes 上记录了分行名称、地址、预约时间，提前做好了规划。<br>➡️ 提前下载好了各家银行 APP 。</p><p>💵换汇<br>➡️ 国内换汇了 31,500 港币，其中 500 作为消费零钱用，其余开户存入银行。</p><p>📜相关文件<br>➡️ 地址证明、过去半年工资行流水、过去半年纳税记录文件我每一样彩印了 6 份、对应 6 家银行。</p><p>中银香港<br>中银香港，荃湾分行，预约的 4 月 2 日 09:00 。无排队等待，43 分钟开户完成，现场拿提款卡。</p><p>📜我准备的材料：<br>✅ 身份证<br>✅ 港澳通行证<br>✅ 过境小票 (小白条)<br>✅ 3 月份的招行信用卡账单 (掌上生活-账单补寄-公章电子版，彩印)<br>✅ 过去 6 个月的代发工资行流水 (银行 APP 申请电子版，彩印)<br>✅ 过去 6 个月纳税记录 (个人所得税 APP 申请电子版，彩印)</p><p>📽️开户过程<br>➡️ 早上 8 点半到银行门口排队，前边已经有 3 个老大爷在排队了。9 点银行开门，跟着队伍进去，直接跟大堂经理说我预约了开户，给她看了预约邮件，她说 9 点可以你是第一个，问我有没有带 1000 港币、开户完成需要存入，我说带了，然后让我先下载 BOC 香港扫码填写资料，带我去坐门口的小桌那，让我填完找她。BOC 香港和 BOC Pay 我已经提前下载好了。<br>➡️ 就是填写一些个人信息，填写完成找到大堂经理，带我去了旁边的小隔间，接待的理财经理是一个小哥，普通话很好。我直接把老三样和账单、流水、纳税记录给他了。小哥看了一下证件和文件，问开户目的，答投资理财；问有无投资经验，答买过基金和银行理财产品；问需要开通投资账户吗，答需要。<br>➡️ 接下来就是小哥操作，复印证件、在电脑录入信息，有另外一位经理来核对了下我的证件然后签字盖章，引导我在他电脑上填一下投资风险问卷，最后跟我核对了一下电脑上录入的信息，确认之后小哥说稍等他去拿张提款卡。<br>➡️ 一会拿着提款卡回来了，闲聊了几句问我什么时候来的香港、什么时候回去。小哥又在电脑上操作，结束之后跟我说了一些告知事项，给了三本条款小册子，引导我开通了 BOC Pay ，让我离开香港前去自助取款机插卡查询余额激活一下提款卡。<br>➡️ 到此结束，去外边自助存款机存了 1000 港币。</p><p>❗补充说明<br>1️⃣ 中银预约是可以预约 7 天后的第一个工作日或者周六营业日，0 点 5 分之前各预约时段基本都有位置。我 3 月 21 号就预约到了 4 月 2 号。<br>2️⃣ 中银香港荃湾分行无预约不给开户。我开户期间遇到 3 个人来问没有预约能否开户都被拒绝了。</p><p>香港汇丰<br>香港汇丰，荃湾分行，4 月 2 日 walk-in 开户。排队等待 1 小时 40 分钟左右，40 分钟开户完成，同步申请 Red 信用卡，现场拿提款卡</p><p>📜我准备的材料：<br>✅ 身份证<br>✅ 港澳通行证<br>✅ 过境小票 (小白条)<br>✅ 3 月份的招行信用卡账单 (掌上生活-账单补寄-公章电子版，彩印)<br>✅ 过去 6 个月的代发工资行流水 (银行 APP 申请电子版，彩印)<br>✅ 过去 6 个月纳税记录 (个人所得税 APP 申请电子版，彩印)</p><p>📽️开户过程<br>➡️ 在中银香港开户完存完钱立刻去了汇丰荃湾分行，步行 10 分钟到达，无预约取号，前面等候 30 个人。先等了半个小时只过了 1 个号，于是先步行 8 分钟去招商永隆取号，招商永隆取号后要等候 5 个人，决定先在招商永隆等，等了 1 个多小时仅过了 2 个号，与此同时扫描汇丰号码条二维码查看叫号进度已经叫到 38 号，决定先回汇丰，等 10 分钟步行回去，已经过号 2 个了，此时一对老夫妇办业务很快完成了，我于是打断理财经理小姐姐叫号，说我刚才接电话过号了，能否让我先办，小姐姐说可以，小姐姐普通话很好。<br>➡️ 同样我直接把老三样和账单、流水、纳税记录给小姐姐，小姐姐看了一下证件和文件，问开户目的，答投资理财；问有无投资经验，答买过基金和银行理财产品；问让我看下投资记录，我给她看了银行的理财产品，小姐姐说可以。<br>➡️ 接下来就是小姐姐用我手机在汇丰香港 APP 填写申请，复印证件什么的，中间只让我填写了邮箱、详细地址的拼音、公司名称，填写完再下一步之前我都给小姐姐看了一下确认。问我有带港币现金存款吗，我说带了 10000 港币要存，并问小姐姐能否申请信用卡，小姐姐说可以、是申请免年费那个吗，我说是，她说稍等在 APP 上申请，先去拿个提款卡。<br>➡️ 一会小姐姐拿卡回来，确认一些信息盖章签字，小姐姐说签字可以简体、繁体、拼音、英文，但是包括以后所有签字都要用同一份。用我手机在汇丰 APP 申请了信用卡，完成后说信用卡通过后会寄到我的通讯地址，信件到大概 1 个月左右，然后给我提款卡说去旁边自助存款机存款、提款机改密码，不会的可以问我的同事。<br>➡️ 到此结束，去旁边自助存款机存了 10000 港币，然后在提款机修改了提款卡密码。</p><p>❗️补充说明<br>1️⃣ walk-in 的叫号和预约叫号是不一样的号码，我在等待期间发现预约的号码叫号是比较快的，虽然 walk-in 的号码有很多并不是办理开户，业务办理快慢很难判断。我是提前一周没有预约到，所以直接 walk-in 。</p><p>工银亚洲<br>工银亚洲，葵芳分行，预约 4 月 2 日 12:00 - 13:00 开户。无排队等待，45 分钟开户完成，20 分钟排队存款，现在未拿提款卡、卡邮寄。等待提款卡邮寄中。</p><p>📜我准备的材料：<br>✅ 身份证<br>✅ 港澳通行证<br>✅ 未用到⭕️ 过境小票 (小白条)<br>✅ 未用到⭕️ 3 月份的招行信用卡账单 (掌上生活-账单补寄-公章电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月的代发工资行流水 (银行 APP 申请电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月纳税记录 (个人所得税 APP 申请电子版，彩印)</p><p>📽️开户过程<br>➡️ 在汇丰香港开完户已经接近 12 点半了，估计招商永隆已经过号了，工银亚洲的预约时间也到了，就直奔葵芳先办工银亚洲。需要坐两站地铁，这家分行位置不好找，在葵涌广场 2 楼，里面全是小商铺，我到了 2 楼后，转了 5 分钟才找到，已经过了 13:00 了。<br>➡️ 到达之后大堂没有工作人员，保安也不在，只有一个窗口在排队办业务。我于是问门口隔间的小哥说我预约了开户，小哥问我时间，我说 12:00 - 13:00 ；问我名字，我说完他查了一下；问我预约编号是多少，我说完他查了一下说请坐，小哥的普通也很好。<br>➡️ 同样我直接把老三样和账单、流水、纳税记录给小哥，但是小哥只要了身份证和港澳通行证。问我开户目的是什么，答投资理财；问我收入来源是什么，答主要是工作收入，这里理解岔了，小哥说不是这意思喔是你的资金是怎么香港，答主要是电汇，问是否需要开通网银和提款卡，答需要，小哥说需要存 10000 港币，我说带了港币现金。小哥给我他的名片，要我把地址信息发到他名片上的邮箱里，我提前准备了通讯地址、住宅地址、公司信息的简体中文、繁体中文、英文、拼音，所以直接复制就发过去了。然后就是小哥操作，复印证件、盖章签字，有另外一位经理来核对了下我的证件然后签字盖章，中间在小哥电脑上确认了下填写的信息是否正确，确认无误后小哥说等一下我去拿密码纸。<br>➡️ 一会小哥回来把密码纸给我，说提款卡会邮寄到通讯地址，拿到提款卡后在内地工商银行的提款机上激活就可以了。并打印了一张账号明细信息，跟我说可以先拿着账号去存钱，因为现在人比较多，一会还需要再签几个字，于是我拿着账号纸去排队存款，排了 20 分钟才存上，排队的时候小哥已经拿文件过来给我签字了。存款完成我回到小哥那登录工银亚洲 APP 修改密码做了一些设置。<br>➡️ 到此结束。</p><p>❗️补充说明<br>1️⃣ 我预约了不同时段的 4 家分行，只有 1 家分行打电话过来说他们分行已经预约到 7 月份了只好取消。<br>2️⃣ 最初在官网预约提交后提示“系统维护中，请稍后重试”，重新填写，所有选填项一律不填、地址信息精简，这样提交就可以成功了。原因是提交接口是将表单加密后拼接到请求地址、表单内容过多会导致接口请求 414 。 3️⃣ 葵芳分行比较难找，在葵涌广场 2 层的一个商铺，注意葵涌广场是英式标准 G 层/1 层/2 层，2 层对应内地的 3 层，进入后上 3 次扶梯。</p><p>招商永隆<br>招商永隆，荃湾分行，3 月份已经在 APP 提交了申请，通过，只待去分行激活，无需再预约分行和时间。4 月 2 日，排队等待 1 小时 10 分钟左右，20 分钟激活完成，现在未拿提款卡、卡邮寄。等待提款卡邮寄中。</p><p>📜我准备的材料：<br>✅ 身份证<br>✅ 港澳通行证<br>✅ 过境小票 (小白条)<br>✅ 未用到⭕️ 3 月份的招行信用卡账单 (掌上生活-账单补寄-公章电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月的代发工资行流水 (银行 APP 申请电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月纳税记录 (个人所得税 APP 申请电子版，彩印)</p><p>📽️开户过程<br>➡️ 在工银亚洲开户完之后，坐地铁回来分行已经 3 点 10 分左右了，这家分行只有 2 个隔间，我中午取的号已经过了很多，正巧小姐姐刚办完 1 个，我就探头问了下我能办吗，小姐姐说你已经过号很久了，需要重新叫号，于是我重新取号，号码为 G (看注意事项 2)，前面排 8 个人。另外 1 个隔间的小哥已经休息了，所以只剩 1 个隔间，小姐姐的普通话很好。<br>➡️ 排队等候到号开始办理，同样我直接把老三样和账单、流水、纳税记录给小姐姐，小姐姐只要了老三样，问开户目的是什么，答投资理财；问月收入多少，答如实；问将来会有多少资金注入，答每半年会有 5w 人民币等值港币进来；问有带港币现金吗，答带了 10000 港币在激活完成后存入。接下来就是小姐姐复印证件、跟我核对信息、盖章签字。最后小姐姐说激活完成了，提款卡会需要一个月左右邮寄到通信地址，柜台存款人比较多，建议去外边自助机存款。外面只有一个自助机，还排队，于是我先去南洋商业银行开户回来再存款，没有排队，直接存入 10000 港币。<br>➡️ 到此结束。</p><p>❗️补充说明<br>1️⃣ 我是 3 月份就在招商永隆 APP 提交申请并审批通过。我在排队等候期间有 5 位因为没有提前申请，被小姐姐拒绝开户。<br>2️⃣ 取号机上有提示，荃湾分行的 G/H/I 开头号码都是开户相关的，叫号的时候都会叫，我不确定顺序，但基本是 G H I 轮流叫。所以后面跟开户相关的每个号码我都取了一张。<br>3️⃣ 我在 3 点 40 左右排队等候的时候小姐姐和引导的工作人员已经开始自己取号了，把后面时间点的号取掉了，再之后的号码当天办理不了了。</p><p>南洋商业银行<br>南洋商业银行，荃湾分行，提前在 APP 提交了申请，通过，只待去分行认证，预约荃湾分行 4 月 2 日 15:00 - 17:00 。排队等待 1 小时左右，15 分钟认证完成，现在未拿提款卡、卡邮寄。等待提款卡邮寄中。</p><p>📜我准备的材料：<br>✅ 身份证<br>✅ 港澳通行证<br>✅ 未用到⭕️ 过境小票 (小白条)<br>✅ 未用到⭕️ 3 月份的招行信用卡账单 (掌上生活-账单补寄-公章电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月的代发工资行流水 (银行 APP 申请电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月纳税记录 (个人所得税 APP 申请电子版，彩印)</p><p>📽️开户过程<br>➡️ 在招商永隆开户完之后，步行不到 2 分钟到达分行。我到的时候没有保安，没有大堂经理。隔间里的经理都在打电话或者有客户，于是我看了取号机。取号机上有开户分行认证的号(看注意事项 2)，于是取号等待。账户业务只有一个小哥在，有一个大妈办了 50 分钟，我前边 1 个号的大妈早就已经急了，坐立不安，找别的经理说。我也找了一个女经理，让我等待叫号就可以。小哥的普通话很好。<br>➡️ 排队等候到号开始办理，同样我直接把老三样和账单、流水、纳税记录给小哥，小哥只要了身份证和通行证，要我打开南商 e+ APP 给他，接下来就是小哥复印证件、在我手机 APP 上进行分行认证流程、盖章签字，然后说等一下去拿密码纸，2 3 分钟就回来了，跟我说了分行只能做认证，最终结果还需要几个工作日审批，审评通过后提款卡会在一个月左右寄到通讯地址，收卡后在内地南洋商业银行自助机激活就可以。<br>➡️ 到此结束。离港前已收到短信和邮件审批通过。</p><p>❗️补充说明<br>1️⃣ 我是先在南商 e+ APP 上申请，只需要去分行认证然后等待审批。<br>2️⃣ 取号机上有提示，荃湾分行的 C/F 开头号码都是户口相关的，叫号的时候都会叫，我先取的 F 号，提示也是 F 第一位，但小哥那一直叫 C ，所以我就又取了 C 号。<br>3️⃣ 荃湾分行里有跨境客户开户的指引。</p><p>恒生银行<br>恒生银行，铜锣湾分行。预约铜锣湾分行 4 月 3 日 09:00 - 10:00 。无排队等待，30 分钟开户完成，现场拿提款卡。</p><p>📜我准备的材料：<br>✅ 身份证<br>✅ 港澳通行证<br>✅ 未用到⭕️ 过境小票 (小白条)<br>✅ 未用到⭕️ 3 月份的招行信用卡账单 (掌上生活-账单补寄-公章电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月的代发工资行流水 (银行 APP 申请电子版，彩印)<br>✅ 未用到⭕️ 过去 6 个月纳税记录 (个人所得税 APP 申请电子版，彩印)</p><p>📽️开户过程<br>➡️ 4 月 3 日 9:40 到达分行，在 G 层问保安和大堂经理，说直接去 1 层。上 1 层就有一个小哥站在接待台，我说预约了开户，小哥说稍等一下，然后他走了一会回来让我跟他走。小哥的普通话很好。<br>➡️ 带我到一个小隔间，让我等待一下，他去拿个文件。1 分钟回来了，我把老三样和账单、流水、纳税记录给小哥，小哥只要了身份证和通行证，问我通讯地址和身份证上的地址一样吗，我说不一样，小哥说那再稍等一下，我还要再去拿个文件。然后回来，小哥说本次申请是申请优越理财账户，100 万资产免管理费，2 年豁免期内免管理费，1 年后资产不达标来港降级，账户也会有专属的经理对接我说可以的。政策限制账户无法开通美股，我说了解。<br>➡️ 接下来就是小哥操作，在我手机啊恒生银行 APP 操作，中间让我输入了手机号、邮箱地址、详细地址部分，其它都是小哥操作，在一份文件手写了通讯地址，提示一定要以 中国+省份名 开头，然后就是签字，在小哥 Pad 上设置密码、确认信息什么的。完成之后小哥说等下我去拿卡，大概 2 3 分钟回来，跟我说一切都可以了。<br>➡️ 到此结束。</p><p>❗️补充说明<br>1️⃣ 我提前一周在 4 月 2 号约了 1 家分行，可惜办其它行时间不够去了。4 月 3 号我分散时间约了 5 家分行，早上去铜锣湾第一家就办理成功。<br>2️⃣ 我预约之前做了攻略，很多说恒生开户需要买保险、买理财才给开，所以我就预约了 6 家分行碰碰运气。<br>3️⃣ 铜锣湾分行有跨境客户开户的指引。</p><p>第 1 条附言  ·  1 天前<br>🛵附上我的总行程<br>➡️ 3月30号，下午，北京飞往深圳，深圳北站附近入住1晚。<br>➡️ 3月31号，深圳高铁到香港西九龙，香港，逛，香港入住3晚：3月31号入住、4月3号离店。<br>➡️ 4月1号，澳门，逛，早上香港去澳门，晚上澳门返香港。<br>➡️ 4月2号，香港银行开户5家，晚上，逛。<br>➡️ 4月3号，上午，香港，逛，恒生银行开户；下午，香港西九龙高铁前往广州，广州，逛，广州入住3晚：4月3号入住、4月5号离店、4月5号换至白云机场附近酒店入住1晚。<br>➡️ 4月4号，广州，逛。<br>➡️ 4月5号，广州，逛。<br>➡️ 4月6号，广州飞回北京。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;2024香港银行卡开户总结&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>中国八大菜系视频课（800道菜品）</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-137/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-137/</id>
    <published>2024-04-09T08:51:55.000Z</published>
    <updated>2024-04-09T08:54:38.332Z</updated>
    
    <content type="html"><![CDATA[<p>中国八大菜系视频课（800道菜品）</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/CaxypF4kmotWE8u.png" alt="image.png"></p><p>中国八大菜系: 川菜、湘菜、粤菜、闽菜、苏菜、浙菜、徽菜和鲁菜。 中华美食博大精深，因着地理、气候、习俗、特产的不同，因而发展出各式各样具有地方风味和特色的菜肴，以及相应的烹调方法，形成了不同地方风味的菜系，当中最着名的有川菜、湘菜、粤菜、闽菜、苏菜、浙菜、徽菜和鲁菜八种，合称八大菜系。</p><p><a href="https://pan.quark.cn/s/7580a029083a">八大菜系视频下载地址</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;中国八大菜系视频课（800道菜品）&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>U盘车载专用音乐 3068 首 24G</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-136/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-136/</id>
    <published>2024-04-09T08:49:53.000Z</published>
    <updated>2024-04-09T08:51:50.379Z</updated>
    
    <content type="html"><![CDATA[<p>U盘车载专用音乐 3068 首 24G</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/XCntb5zW6iTx3DQ.png" alt="image.png"></p><p><a href="https://pan.quark.cn/s/863138a86c15#/list/share">U盘车载专用音乐 3068 首 24G</a></p><p>U盘车载专用音乐 3068 首 24G，包含抖音快手最新热门歌曲、经典怀旧金曲、发烧HIFI音乐、环绕音乐、欧美电音、一人一首歌成名曲等等高品质音乐资源</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;U盘车载专用音乐 3068 首 24G&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>最新下架短剧合集</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-135/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-135/</id>
    <published>2024-04-09T08:46:49.000Z</published>
    <updated>2024-04-09T08:49:41.456Z</updated>
    
    <content type="html"><![CDATA[<p>下架短剧合集</p><a id="more"></a><p><a href="https://pan.quark.cn/s/ca65874c7d09">最新下架短剧合集</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;下架短剧合集&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>Mac 虚拟机：Parallels Desktop v19.3 TNT 直装版</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-134/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-134/</id>
    <published>2024-04-09T08:42:39.000Z</published>
    <updated>2024-04-09T08:47:54.303Z</updated>
    
    <content type="html"><![CDATA[<p>Mac 虚拟机：Parallels Desktop v19.3 TNT 直装版</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/nBNrHX1ToEmuZg7.png" alt="image.png"></p><p>Parallels Desktop for Mac是功能强大灵活度高的虚拟化方案，无需重启即可在同一台电脑上随时访问Windows和Mac两个系统上的众多应用程序。</p><p>Parallels Desktop 是一款专业的Mac虚拟机，可在Windows 与Mac OS 应用程序之间随意拖放文件并直接从Mac dock 启动Windows 程序，能够在Mac上以最便捷、快速、高效的方式运行Windows。</p><p>x 功能简介<br>便捷安全向导：便捷的虚拟机安装向导可直接通过系统镜像包及U盘来安装系统，且能自动查找操作系统无需担心Mac上是否有光驱，也可手动选择媒介类型范围。并保证Mac上和Windows虚拟机中所有一切程序的安全。<br>多虚拟机支持：Windows、Linux、Chrome OS、Mac OS、Android OS等。 其Linux虚拟机整合可实现共享应用程序、共享配置文件和自动更新 虚拟机管理工具：通过图形模式查看虚拟机使用的 Mac 处理器与内存来监控 Mac 资源。<br>设备共享：进一步集成整合Windows与Mac，无缝共享Windows与Mac之间的蓝牙设备，Mac废纸篓与Windows回收站整合，只需要管理一个。<br>安全稳定性：完美的整体性能与超强的稳定性：电池寿命更长、显卡可达 1GB、通过Intel AES-NI加速虚拟机加密，所有的Windows程序都会进行安全加密。<br>手势共用：Mac和Windows深度整合，可以使用Mac的查字典手势在Windows中查字典。<br>Safari中引用IE按钮：当网页在 Safari 中运行不好时，点击一下”IE“图标就可以从Safari切换到Internet Explorer中显示该网页。<br>拖放附件到 Outlook：轻松地从桌面拖放文件到Dock图标用以在Windows的Outlook中作为新邮件的附件。</p><p><a href="https://pan.baidu.com/s/1w3RE0aLO_GBscG-SGTaDSg?pwd=zapu">Mac 虚拟机：Parallels Desktop v19.3 TNT 直装版</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Mac 虚拟机：Parallels Desktop v19.3 TNT 直装版&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>TikTok 抖音国际版 v34.1.4 去广告解锁全部国家任意切换</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-133/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-133/</id>
    <published>2024-04-09T08:32:02.000Z</published>
    <updated>2024-04-09T08:36:47.773Z</updated>
    
    <content type="html"><![CDATA[<p>TikTok 抖音国际版 v34.1.4 去广告解锁全部国家任意切换</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/bJcEXYyBs7zP3Zr.png" alt="image.png"></p><ul><li>去所有广告、去保存视频水印、解除国家/地区限制，无视区域封锁</li><li>提供额外插件可设置全球国家区域,设置视频保存位置,等自定义设置</li><li>解除视频下载限制，可存储任何视频无视权限；解除合拍/拼接限制</li><li>给视频添加播放进度条显示；为下载视频文件的名称添加了作者标签</li><li>修改GIF和视频默认保存位置重定向为Movies/TikTok目录文件夹存储；</li><li>支持手机号码登陆；修正谷歌授权、Facebook授权、VK授权；移除了调试信息；</li><li>禁用不必要活动控件、禁用所有类型分析、禁用统计分析、对齐优化、极限压缩；</li><li>启用观看历史、优化电池消耗、禁用自动启动，隐藏的根权限，删除许多其他限制</li><li>强制启用高画质视频、强制启用高品质音频、强制启用超清分辨率、并启用抗锯齿</li></ul><p><a href="https://pan.baidu.com/s/1LFD2mQ35Ae6KUUWEvenINg?pwd=zapu">tiktok国际版下载地址</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;TikTok 抖音国际版 v34.1.4 去广告解锁全部国家任意切换&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>XMind 2024 v24.01.14362 中文免安装绿色特别版，支持win和mac</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-132/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-132/</id>
    <published>2024-04-09T08:27:54.000Z</published>
    <updated>2024-04-09T08:30:51.982Z</updated>
    
    <content type="html"><![CDATA[<p>XMind 2024 v24.01.14362 中文免安装绿色特别版 下载地址</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/AFiSIVzqert5Tob.png" alt="image.png"></p><p>XMind ZEN一款思维导图软件，简单易用、美观、功能强大，拥有高效的可视化思维模式，具备可扩展、跨平台、稳定性和性能，真正帮助用户提高生产率，促进有效沟通及协作。</p><p>软件功能</p><ul><li>无联网，免登陆，破解激活PRO专业版，无检查更新提示</li><li>提供批处理以供解压是否自选关联文件类型免安装绿色版</li><li>删除Electron框架无用的多国语言Pak，减小文件压缩大小</li><li>安装释放过程自动优化设置 (如果右键解压运行!首次优化.exe)<br>﹂跳过更新特性、许可协议、登陆向导、关闭自动更新和发送日志<br>﹂取消默认勾选导出PNG图像加入”presented with wmind”选项</li></ul><p><a href="https://pan.baidu.com/s/1c-PzCC9WqYHzgGU8ZrzkfA?pwd=zapu">xmind破解版下载地址</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;XMind 2024 v24.01.14362 中文免安装绿色特别版 下载地址&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>功夫熊猫-4 最新电影下载地址</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-131/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-131/</id>
    <published>2024-04-09T08:26:31.000Z</published>
    <updated>2024-04-09T08:27:49.020Z</updated>
    
    <content type="html"><![CDATA[<p>功夫熊猫-4 2024年美国动画喜剧片，为《功夫熊猫系列》的第四部电影，2016年电影《功夫熊猫3》的续集，由麦克·米契执导，杰克·布莱克、奥卡菲娜、维奥拉·戴维斯、达斯汀·霍夫曼、吴汉章、布莱恩·科兰斯顿、伊恩·麦柯肖恩和关继威配音。 《功夫熊猫4》由环球影业排定2024年3月8日于美国上映</p><a id="more"></a><p>剧情简介<br>　　神龙大侠阿宝（杰克·布莱克 Jack Black 配音）再度归来，要被师父（达斯汀·霍夫曼 Dustin Hoffman 配音）强行进阶修行。系列全新最强反派魅影妖后（维奥拉·戴维斯 Viola Davis 配音）登场，神秘莫测的她可以幻化成每一个阿宝的昔日宿敌。此次阿宝又结识了小真（奥卡菲娜 Awkwafina 配音）等新伙伴，并将一同开启这场冒险旅程。</p><p><a href="https://pan.baidu.com/s/1tdX914Fzmox1J4tj8QJs9A?pwd=zapu">功夫熊猫-4下载地址</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;功夫熊猫-4 2024年美国动画喜剧片，为《功夫熊猫系列》的第四部电影，2016年电影《功夫熊猫3》的续集，由麦克·米契执导，杰克·布莱克、奥卡菲娜、维奥拉·戴维斯、达斯汀·霍夫曼、吴汉章、布莱恩·科兰斯顿、伊恩·麦柯肖恩和关继威配音。 《功夫熊猫4》由环球影业排定2024年3月8日于美国上映&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT 4 免费账号分享</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-130/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-130/</id>
    <published>2024-04-09T08:24:04.000Z</published>
    <updated>2024-04-09T08:26:21.687Z</updated>
    
    <content type="html"><![CDATA[<p>ChatGPT账号分享 带GPT-4 All Tools功能</p><a id="more"></a><p>ChatGPT账号分享，带GPT-4 All Tools功能，由大佬@Cydiar404提供，ChatGPT GPT-4 All Tools” 指的是结合了 OpenAI 的 ChatGPT 模型和 GPT-4 架构，并整合了多种工具的系统。这个系统不仅能处理文本输入，还能理解和生成图像，以及利用内置的浏览器工具进行在线搜索</p><h1 id="免费gpt-4-账号分享"><a href="#免费gpt-4-账号分享" class="headerlink" title="免费gpt-4 账号分享"></a>免费gpt-4 账号分享</h1><p>账号1：<a href="mailto:&#x6a;&#117;&#x66;&#x66;&#97;&#x74;&#102;&#112;&#x76;&#x66;&#x31;&#x33;&#x40;&#111;&#117;&#116;&#108;&#111;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;">&#x6a;&#117;&#x66;&#x66;&#97;&#x74;&#102;&#112;&#x76;&#x66;&#x31;&#x33;&#x40;&#111;&#117;&#116;&#108;&#111;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;</a><br>密码1：eqizys84++++</p><p>账号2：<a href="mailto:&#109;&#x71;&#106;&#x6f;&#121;&#104;&#102;&#101;&#x76;&#120;&#x32;&#x32;&#x40;&#x6f;&#117;&#x74;&#108;&#111;&#x6f;&#x6b;&#x2e;&#99;&#x6f;&#109;">&#109;&#x71;&#106;&#x6f;&#121;&#104;&#102;&#101;&#x76;&#120;&#x32;&#x32;&#x40;&#x6f;&#117;&#x74;&#108;&#111;&#x6f;&#x6b;&#x2e;&#99;&#x6f;&#109;</a><br>密码2：vvuujt86++++</p><p>账号3：<a href="mailto:&#120;&#116;&#x61;&#x77;&#x70;&#100;&#119;&#121;&#x6d;&#119;&#x34;&#54;&#64;&#111;&#x75;&#x74;&#108;&#111;&#111;&#107;&#46;&#x63;&#x6f;&#x6d;">&#120;&#116;&#x61;&#x77;&#x70;&#100;&#119;&#121;&#x6d;&#119;&#x34;&#54;&#64;&#111;&#x75;&#x74;&#108;&#111;&#111;&#107;&#46;&#x63;&#x6f;&#x6d;</a><br>密码3：jiovvl51++++</p><p>账号4：<a href="mailto:&#x61;&#x75;&#122;&#x6b;&#107;&#122;&#105;&#x63;&#110;&#x63;&#x39;&#52;&#x40;&#x6f;&#117;&#x74;&#108;&#111;&#x6f;&#x6b;&#x2e;&#x63;&#x6f;&#x6d;">&#x61;&#x75;&#122;&#x6b;&#107;&#122;&#105;&#x63;&#110;&#x63;&#x39;&#52;&#x40;&#x6f;&#117;&#x74;&#108;&#111;&#x6f;&#x6b;&#x2e;&#x63;&#x6f;&#x6d;</a><br>密码4：eibjtm50++++</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ChatGPT账号分享 带GPT-4 All Tools功能&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>开课吧最新 自动驾驶算法工程师 01期 – 带源码课件</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-129/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-129/</id>
    <published>2024-04-09T08:19:52.000Z</published>
    <updated>2024-04-09T08:23:54.855Z</updated>
    
    <content type="html"><![CDATA[<p>开课吧 自动驾驶算法工程师 01期 – 带源码课件</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/e2X9AovSEO5DNVz.png" alt="image.png"></p><p>自动驾驶算法工程师是负责研发和设计自动驾驶系统中的算法和软件的专业人员。他们的主要职责是研究和开发能够使车辆自主感知、决策和控制的算法，以实现安全、高效和可靠的自动驾驶功能。自动驾驶算法工程师需要具备深入的计算机科学和机器学习知识，了解传感器技术、图像处理和数据融合等相关领域。他们使用这些知识来开发和优化感知算法，例如目标检测、跟踪和场景理解，以帮助车辆识别和理解周围的环境。此外，他们还设计和实现决策和规划算法，使车辆能够根据环境和任务要求做出安全和高效的驾驶决策。</p><p>自动驾驶算法工程师通常会使用编程语言如Python、C++等来实现算法，并利用仿真平台和真实车辆进行测试和验证。他们也需要与其他团队成员，如感知工程师、控制工程师和软件工程师等密切合作，共同构建完整的自动驾驶系统。</p><p><a href="https://pan.quark.cn/s/dc72eb0b606c">下载地址</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;开课吧 自动驾驶算法工程师 01期 – 带源码课件&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>直播带货从入门到精通全流程最新教程</title>
    <link href="http://v2rayhome.github.io/2024/04/09/fuli-128/"/>
    <id>http://v2rayhome.github.io/2024/04/09/fuli-128/</id>
    <published>2024-04-09T08:13:26.000Z</published>
    <updated>2024-04-09T08:19:26.638Z</updated>
    
    <content type="html"><![CDATA[<p>直播带货从入门到精通全流程最新教程</p><a id="more"></a><p><img src="https://s2.loli.net/2024/04/09/ZNBz37Rt91jkGP5.png" alt="image.png"></p><p><a href="https://pan.quark.cn/s/05d3756e6378">下载地址</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;直播带货从入门到精通全流程最新教程&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>可离线的文本转语音工具MultiTTS 免费下载地址</title>
    <link href="http://v2rayhome.github.io/2024/04/08/fuli-127/"/>
    <id>http://v2rayhome.github.io/2024/04/08/fuli-127/</id>
    <published>2024-04-08T15:24:35.000Z</published>
    <updated>2024-04-08T15:31:01.299Z</updated>
    
    <content type="html"><![CDATA[<p>可离线的文本转语音工具MultiTTS</p><a id="more"></a><p>MultiTTS是一款免费可离线的文本转tts语音工具，主要是为了让其它软件调用丰富的AI语音包来实现无障碍多音色朗读发声从而达到（在）离线听书的功能，支持中英文、日语等语言及广东话、东北话等方言，弥补手机系统自带的单调枯燥且生硬的语音TTS。<br>简言之，只要使用具备朗读本地书功能的软件+MultiTTS此款语音发声即可基本替代第三方收费的听书类软件，至少功能无限制无广告，接近真人发音。</p><h1 id="文本转语音工具下载地址"><a href="#文本转语音工具下载地址" class="headerlink" title="文本转语音工具下载地址"></a>文本转语音工具下载地址</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1kvDGW0QX3oVq0MejLuU3NA?pwd&#x3D;aium</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;可离线的文本转语音工具MultiTTS&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>python 最新自动视频剪辑脚本</title>
    <link href="http://v2rayhome.github.io/2024/04/08/fuli-126/"/>
    <id>http://v2rayhome.github.io/2024/04/08/fuli-126/</id>
    <published>2024-04-08T15:23:30.000Z</published>
    <updated>2024-04-08T15:24:30.111Z</updated>
    
    <content type="html"><![CDATA[<p>快速完成视频的剪辑合成</p><a id="more"></a><p>MoviePy（完整文档）是一个用于视频编辑的 Python 库：剪切、连接、插入标题、视频合成（又称非线性编辑）、视频处理和创建自定义特效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">from moviepy.editor import ImageClip, AudioFileClip, VideoFileClip, concatenate_videoclips</span><br><span class="line"> </span><br><span class="line"># 文件列表</span><br><span class="line">file_list &#x3D; [&#39;d:&#x2F;图片&#x2F;image1.png&#39;, &#39;d:&#x2F;图片&#x2F;video1.mp4&#39;, &#39;d:&#x2F;图片&#x2F;image1.png&#39;, &#39;d:&#x2F;图片&#x2F;video2.mp4&#39;]</span><br><span class="line"> </span><br><span class="line"># 创建剪辑对象列表</span><br><span class="line">clips &#x3D; []</span><br><span class="line">for file in file_list:</span><br><span class="line">    if file.endswith(&#39;.jpg&#39;) or file.endswith(&#39;.png&#39;):</span><br><span class="line">        clips.append(ImageClip(file, duration&#x3D;5))</span><br><span class="line">    elif file.endswith(&#39;.mp4&#39;) or file.endswith(&#39;.avi&#39;):</span><br><span class="line">        clips.append(VideoFileClip(file))</span><br><span class="line"> </span><br><span class="line"># 将所有剪辑合并为一个剪辑</span><br><span class="line">final_clip &#x3D; concatenate_videoclips(clips)</span><br><span class="line"> </span><br><span class="line"># 音频文件</span><br><span class="line">audio_file &#x3D; &#39;d:&#x2F;图片&#x2F;audio.mp3&#39;</span><br><span class="line"> </span><br><span class="line"># 创建AudioFileClip对象</span><br><span class="line">audio_clip &#x3D; AudioFileClip(audio_file)</span><br><span class="line"> </span><br><span class="line"># 将音频剪辑添加到视频剪辑中</span><br><span class="line">final_clip &#x3D; final_clip.set_audio(audio_clip)</span><br><span class="line"> </span><br><span class="line"># 保存合成后的视频</span><br><span class="line">final_clip.write_videofile(&quot;d:&#x2F;output.mp4&quot;, codec&#x3D;&#39;libx264&#39;, audio_codec&#x3D;&#39;aac&#39;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;快速完成视频的剪辑合成&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>最新 uiautomator2 安卓自动化脚本 批量操作抖音app，自动喜欢、评论和点赞视频</title>
    <link href="http://v2rayhome.github.io/2024/04/08/fuli-125/"/>
    <id>http://v2rayhome.github.io/2024/04/08/fuli-125/</id>
    <published>2024-04-08T13:59:02.000Z</published>
    <updated>2024-04-08T14:09:07.881Z</updated>
    
    <content type="html"><![CDATA[<p>uiautomator2安卓自动化 批量喜欢、评论抖音快手视频</p><a id="more"></a><p>源代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import uiautomator2 as u2</span><br><span class="line">import time</span><br><span class="line">import random</span><br><span class="line">import logging</span><br><span class="line"> </span><br><span class="line">#python -m uiautomator2 init   代码运行前需要初始化，cmd中执行该命令，结束后需要关闭服务看下面的注释</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">功能：</span><br><span class="line">PC端运行代码，自动化操控安卓手机，批量喜欢、评论抖音视频</span><br><span class="line">代码主要是练习分享uiautomator2的使用，其实最开始是为了每天批量签到获得积分的（如果你用几十个号需要签到手点是很痛苦的），</span><br><span class="line">编写了签到的代码，但是因为违规删帖了。</span><br><span class="line"> </span><br><span class="line">原理：</span><br><span class="line">uiautomator2 实现手机的自动化调试，网上一大堆教程。</span><br><span class="line">代码会先点击喜欢按纽，然后点击评论，激活评论输入框后，随机输入textlist列表中的评论语并发送</span><br><span class="line">返回到视频播放页，下滑进行下一个视频操作</span><br><span class="line"> </span><br><span class="line">准备：</span><br><span class="line">1. python安装uiautomator2、random：</span><br><span class="line">pip3 install  --pre -U uiautomator2  -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple </span><br><span class="line">pip3 install random keyboard -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple     </span><br><span class="line">2.安卓手机数据线连接电脑（传输文件，需非充电），并打开开发者选项中的usb调试、use模拟点击（小米，否则报32001 Jsonrpc error）   </span><br><span class="line">cmd中运行：python -m uiautomator2 init  成功初始化后，手动点开抖音，</span><br><span class="line">修改下面的textlist评论语列表，如果你只是批量喜欢而不需要评论，修改71行为like(d,0)，运行代码</span><br><span class="line">中途不想运行了，按ctrl+c中止，用完了之后，手机上ATX软件&gt;停止ATXAGENT 停止UIATOMTOR 或者取消注释最后一行代码</span><br><span class="line"> </span><br><span class="line">提示：</span><br><span class="line">pip3 install -U appinspector   UI查看器，weditor的新版本，</span><br><span class="line">代码是在armV8 荣耀20上测试的，如果你发现代码无效，学习uiautomator2，需要用动appinspector，修改相关按纽的xpath</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"> </span><br><span class="line">def like(d,type):</span><br><span class="line">    try:</span><br><span class="line">        like &#x3D; d.xpath(&quot;%点赞%&quot;)</span><br><span class="line">        like.click()</span><br><span class="line">        time.sleep(2)</span><br><span class="line">        if type &#x3D;&#x3D; 1:</span><br><span class="line">            talk(d,textlist)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line">        pass  </span><br><span class="line"> </span><br><span class="line">def talk(d,textlist):</span><br><span class="line">    try:</span><br><span class="line">        d.xpath(&#39;评论%&#39;).click()  #点击评论</span><br><span class="line">        time.sleep(3)</span><br><span class="line">        #d.press(&quot;enter&quot;)   #会出错</span><br><span class="line">        #d.click(320, 2135)  #评论输入框的图标，激活评论框的另一种方法</span><br><span class="line">        d.xpath(&quot;&#x2F;&#x2F;android.widget.EditText&quot;).click()  #点击并激活评论框</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        text1 &#x3D; random.choice(textlist).strip(&#39;\n&#39;)</span><br><span class="line">        d(focused&#x3D;True).set_text(text1)</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        d.xpath(&#39;发送&#39;).click()</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        d.press(&quot;back&quot;)</span><br><span class="line">    except Exception:</span><br><span class="line">        input(&#39;评论出错，请手动评论返回到视频播放页：&#39;)</span><br><span class="line"> </span><br><span class="line">textlist &#x3D; [&#39;太好了&#39;,&#39;喜欢&#39;,&#39;开心&#39;]</span><br><span class="line"> </span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    d &#x3D; u2.connect() # connect to device</span><br><span class="line">    d.xpath.logger.setLevel(logging.DEBUG)   #默认是logging.INFO</span><br><span class="line">    #d.app_start(&#39;com.ss.android.ugc.aweme&#39;)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    while True:   </span><br><span class="line">        try:    </span><br><span class="line">            like(d,1)   #like(d,1) 喜欢并评论  like(d,0) 只喜欢不评论</span><br><span class="line">            d.swipe_ext(&quot;up&quot;,scale&#x3D;0.9)</span><br><span class="line">            time.sleep(3)</span><br><span class="line">        except KeyboardInterrupt:</span><br><span class="line">            break</span><br><span class="line">    print(&#39;你已手动停止，程序结束&#39;)</span><br><span class="line">    #d.service(&quot;uiautomator&quot;).stop()   #停止ATXAGENT 停止UIATOMTOR，代码再次运行需要重新init</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;uiautomator2安卓自动化 批量喜欢、评论抖音快手视频&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>c++ 调用 openssl 3.0 生成密钥对和加解密</title>
    <link href="http://v2rayhome.github.io/2024/04/08/fuli-124/"/>
    <id>http://v2rayhome.github.io/2024/04/08/fuli-124/</id>
    <published>2024-04-08T13:52:00.000Z</published>
    <updated>2024-04-08T13:52:39.390Z</updated>
    
    <content type="html"><![CDATA[<p>c++ 调用 openssl 3.0 生成密钥对, 加解密</p><a id="more"></a><p>C++  openssl 源代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;openssl&#x2F;rsa.h&gt;</span><br><span class="line">#include &lt;openssl&#x2F;pem.h&gt;</span><br><span class="line">#include &lt;openssl&#x2F;err.h&gt;</span><br><span class="line"></span><br><span class="line">namespace openssl_rsa_3_x</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 官方文档 https:&#x2F;&#x2F;www.openssl.org&#x2F;docs&#x2F;man3.1&#x2F;man7&#x2F;EVP_PKEY-RSA.html</span><br><span class="line">    &#x2F;&#x2F; 下面的 GenerateKeys1&#x2F;2&#x2F;3, 都能用, 1和2效果是一样的, 3可以设置参数生成密钥</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 从EVP_PKEY对象中提取公钥和私钥</span><br><span class="line">    inline void GenerateKeysForEvp(EVP_PKEY* pkey, std::string&amp; pri_key, std::string&amp; pub_key)</span><br><span class="line">    &#123;</span><br><span class="line">        BIO* pri &#x3D; BIO_new(BIO_s_mem());</span><br><span class="line">        BIO* pub &#x3D; BIO_new(BIO_s_mem());</span><br><span class="line"></span><br><span class="line">        PEM_write_bio_PrivateKey(pri, pkey, NULL, NULL, 0, NULL, NULL);</span><br><span class="line">        PEM_write_bio_PUBKEY(pub, pkey);</span><br><span class="line"></span><br><span class="line">        size_t pri_len &#x3D; BIO_pending(pri);</span><br><span class="line">        size_t pub_len &#x3D; BIO_pending(pub);</span><br><span class="line"></span><br><span class="line">        pri_key.resize(pri_len);</span><br><span class="line">        pub_key.resize(pub_len);</span><br><span class="line">        BIO_read(pri, &amp;pri_key[0], pri_len);</span><br><span class="line">        BIO_read(pub, &amp;pub_key[0], pub_len);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 内存释放  </span><br><span class="line">        BIO_free_all(pub);</span><br><span class="line">        BIO_free_all(pri);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 生成密钥对, 返回是否成功</span><br><span class="line">    &#x2F;&#x2F; pri_key &#x3D; 接收私钥结果</span><br><span class="line">    &#x2F;&#x2F; pub_key &#x3D; 接收公钥结果</span><br><span class="line">    &#x2F;&#x2F; bits &#x3D; 密钥长度</span><br><span class="line">    inline bool GenerateKeys1(std::string&amp; pri_key, std::string&amp; pub_key, UINT bits &#x3D; 2048)</span><br><span class="line">    &#123;</span><br><span class="line">        EVP_PKEY* pkey &#x3D; EVP_RSA_gen(bits);</span><br><span class="line">        if (!pkey)</span><br><span class="line">            return false;</span><br><span class="line"></span><br><span class="line">        GenerateKeysForEvp(pkey, pri_key, pub_key);</span><br><span class="line"></span><br><span class="line">        EVP_PKEY_free(pkey);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 生成密钥对, 返回是否成功</span><br><span class="line">    &#x2F;&#x2F; pri_key &#x3D; 接收私钥结果</span><br><span class="line">    &#x2F;&#x2F; pub_key &#x3D; 接收公钥结果</span><br><span class="line">    &#x2F;&#x2F; bits &#x3D; 密钥长度</span><br><span class="line">    inline bool GenerateKeys2(std::string&amp; pri_key, std::string&amp; pub_key, UINT bits &#x3D; 2048)</span><br><span class="line">    &#123;</span><br><span class="line">        EVP_PKEY* pkey &#x3D; NULL;</span><br><span class="line">        EVP_PKEY_CTX* pctx &#x3D; EVP_PKEY_CTX_new_from_name(NULL, &quot;RSA&quot;, NULL);</span><br><span class="line">        EVP_PKEY_keygen_init(pctx);</span><br><span class="line">        EVP_PKEY_generate(pctx, &amp;pkey);</span><br><span class="line">        if (!pkey)</span><br><span class="line">            return false;</span><br><span class="line"></span><br><span class="line">        GenerateKeysForEvp(pkey, pri_key, pub_key);</span><br><span class="line"></span><br><span class="line">        EVP_PKEY_CTX_free(pctx);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 生成密钥对, 返回是否成功</span><br><span class="line">    &#x2F;&#x2F; pri_key &#x3D; 接收私钥结果</span><br><span class="line">    &#x2F;&#x2F; pub_key &#x3D; 接收公钥结果</span><br><span class="line">    &#x2F;&#x2F; bits &#x3D; 密钥长度</span><br><span class="line">    inline bool GenerateKeys3(std::string&amp; pri_key, std::string&amp; pub_key, UINT bits &#x3D; 2048)</span><br><span class="line">    &#123;</span><br><span class="line">        unsigned int primes &#x3D; 3;</span><br><span class="line">        OSSL_PARAM params[3];</span><br><span class="line">        EVP_PKEY* pkey &#x3D; NULL;</span><br><span class="line">        EVP_PKEY_CTX* pctx &#x3D; EVP_PKEY_CTX_new_from_name(NULL, &quot;RSA&quot;, NULL);</span><br><span class="line"></span><br><span class="line">        EVP_PKEY_keygen_init(pctx);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 设置参数生成密钥</span><br><span class="line">        &#x2F;&#x2F; 官方文档 https:&#x2F;&#x2F;www.openssl.org&#x2F;docs&#x2F;man3.0&#x2F;man3&#x2F;OSSL_PARAM_construct_uint.html</span><br><span class="line">        params[0] &#x3D; OSSL_PARAM_construct_uint(&quot;bits&quot;, &amp;bits);</span><br><span class="line">        params[1] &#x3D; OSSL_PARAM_construct_uint(&quot;primes&quot;, &amp;primes);</span><br><span class="line">        params[2] &#x3D; OSSL_PARAM_construct_end();</span><br><span class="line">        EVP_PKEY_CTX_set_params(pctx, params);</span><br><span class="line"></span><br><span class="line">        EVP_PKEY_generate(pctx, &amp;pkey);</span><br><span class="line"></span><br><span class="line">        if (!pkey)</span><br><span class="line">        &#123;</span><br><span class="line">            EVP_PKEY_CTX_free(pctx);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        GenerateKeysForEvp(pkey, pri_key, pub_key);</span><br><span class="line"></span><br><span class="line">        EVP_PKEY_CTX_free(pctx);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 一般情况下都是公钥加密, 私钥解密, 如果是私钥加密的话, 私钥也可以解密</span><br><span class="line">    &#x2F;&#x2F; 所以只写公钥加密和私钥解密的函数</span><br><span class="line">    &#x2F;&#x2F; 需要私钥解密公钥解密的话, 可以改 PEM_read_bio_PUBKEY&#x2F;PEM_read_bio_PrivateKey</span><br><span class="line">    &#x2F;&#x2F; 看名字就能看出来, 一个是读取公钥, 一个是读取私钥</span><br><span class="line">    &#x2F;&#x2F; 后续的加解密操作都是根据 PEM_read_bio_PUBKEY&#x2F;PEM_read_bio_PrivateKey 返回的对象操作的</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 公钥加密</span><br><span class="line">    &#x2F;&#x2F; pData &#x3D; 要加密的数据</span><br><span class="line">    &#x2F;&#x2F; nSize &#x3D; 要加密的数据长度</span><br><span class="line">    &#x2F;&#x2F; pub_key &#x3D; 公钥</span><br><span class="line">    inline std::string rsa_encrypt(LPCVOID pData, size_t nSize, LPCSTR pub_key)</span><br><span class="line">    &#123;</span><br><span class="line">        std::string en_data;</span><br><span class="line">        if (!pData || nSize &#x3D;&#x3D; 0)</span><br><span class="line">            return en_data;   &#x2F;&#x2F; 没有数据, 直接返回空字符串</span><br><span class="line"></span><br><span class="line">        EVP_PKEY_CTX* ctx &#x3D; 0;</span><br><span class="line">        BIO* keybio &#x3D; BIO_new_mem_buf(pub_key, -1);</span><br><span class="line">        EVP_PKEY* pKey &#x3D; PEM_read_bio_PUBKEY(keybio, 0, NULL, NULL);</span><br><span class="line">        while (pKey)</span><br><span class="line">        &#123;</span><br><span class="line">            ctx &#x3D; EVP_PKEY_CTX_new(pKey, NULL);</span><br><span class="line">            if (!ctx)</span><br><span class="line">                break;</span><br><span class="line"></span><br><span class="line">            if (EVP_PKEY_encrypt_init(ctx) &lt;&#x3D; 0)  &#x2F;&#x2F; 初始化加密</span><br><span class="line">                break;</span><br><span class="line"></span><br><span class="line">            const int key_len &#x3D; EVP_PKEY_size(pKey);</span><br><span class="line">            char* buf &#x3D; new char[key_len];</span><br><span class="line"></span><br><span class="line">            LPCBYTE ptr &#x3D; reinterpret_cast&lt;LPCBYTE&gt;(pData);</span><br><span class="line">            LPCBYTE pEnd &#x3D; ptr + nSize;            const int block_len &#x3D; key_len - 11;</span><br><span class="line">            int len &#x3D; block_len;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; 计算结果长度, 预先分配这么大的内存, 计算方式为:</span><br><span class="line">            &#x2F;&#x2F; 每次加密最大尺寸 &#x3D; block_len</span><br><span class="line">            &#x2F;&#x2F; 加密次数 &#x3D; 总尺寸 &#x2F; block_len</span><br><span class="line">            &#x2F;&#x2F; 每次加密得到的长度 &#x3D; key_len</span><br><span class="line">            &#x2F;&#x2F; 总尺寸 &#x3D; 每次加密得到的长度 * 总次数</span><br><span class="line">            const size_t reserve_size &#x3D; ((nSize &#x2F; block_len + ((nSize % block_len &#x3D;&#x3D; 0) ? 0 : 1)) * key_len);</span><br><span class="line">            en_data.reserve(reserve_size);</span><br><span class="line"></span><br><span class="line">            while (ptr &lt; pEnd)</span><br><span class="line">            &#123;</span><br><span class="line">                if ((ptr + len) &gt; pEnd)</span><br><span class="line">                    len &#x3D; pEnd - ptr;</span><br><span class="line"></span><br><span class="line">                size_t outl &#x3D; block_len;</span><br><span class="line">                int ret &#x3D; EVP_PKEY_encrypt(ctx, reinterpret_cast&lt;LPBYTE&gt;(buf), &amp;outl, ptr, len);</span><br><span class="line">                if (ret &gt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    en_data.append(buf, outl);</span><br><span class="line">                &#125;</span><br><span class="line">                ptr +&#x3D; len;</span><br><span class="line">            &#125;</span><br><span class="line">            delete[] buf;</span><br><span class="line"></span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (pKey)</span><br><span class="line">            EVP_PKEY_free(pKey);</span><br><span class="line">        if (ctx)</span><br><span class="line">            EVP_PKEY_CTX_free(ctx);</span><br><span class="line"></span><br><span class="line">        return en_data;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 私钥解密</span><br><span class="line">    &#x2F;&#x2F; pData &#x3D; 要加密的数据</span><br><span class="line">    &#x2F;&#x2F; nSize &#x3D; 要加密的数据长度</span><br><span class="line">    &#x2F;&#x2F; pub_key &#x3D; 私钥</span><br><span class="line">    inline std::string rsa_decrypt(LPCVOID pData, size_t nSize, LPCSTR pri_key)</span><br><span class="line">    &#123;</span><br><span class="line">        std::string de_data;</span><br><span class="line">        if (!pData || nSize &#x3D;&#x3D; 0)</span><br><span class="line">            return de_data;   &#x2F;&#x2F; 没有数据, 直接返回空字符串</span><br><span class="line"></span><br><span class="line">        EVP_PKEY_CTX* ctx &#x3D; 0;</span><br><span class="line">        BIO* keybio &#x3D; BIO_new_mem_buf(pri_key, -1);</span><br><span class="line">        EVP_PKEY* pKey &#x3D; PEM_read_bio_PrivateKey(keybio, 0, NULL, NULL);</span><br><span class="line"></span><br><span class="line">        while (pKey)</span><br><span class="line">        &#123;</span><br><span class="line">            ctx &#x3D; EVP_PKEY_CTX_new(pKey, NULL);</span><br><span class="line">            if (!ctx)</span><br><span class="line">                break;</span><br><span class="line"></span><br><span class="line">            if (EVP_PKEY_decrypt_init(ctx) &lt;&#x3D; 0)  &#x2F;&#x2F; 初始化解密</span><br><span class="line">                break;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; 解密的长度就不计算了, 直接使用数据长度, 解密的尺寸肯定小于数据长度</span><br><span class="line">            de_data.reserve(nSize);</span><br><span class="line">            LPCBYTE ptr &#x3D; reinterpret_cast&lt;LPCBYTE&gt;(pData);</span><br><span class="line">            LPCBYTE pEnd &#x3D; ptr + nSize;            const int key_len &#x3D; EVP_PKEY_size(pKey);</span><br><span class="line">            int len &#x3D; key_len;</span><br><span class="line">            char* buf &#x3D; new char[key_len + 1];</span><br><span class="line"></span><br><span class="line">            while (ptr &lt; pEnd)</span><br><span class="line">            &#123;</span><br><span class="line">                if ((ptr + len) &gt; pEnd)</span><br><span class="line">                    len &#x3D; pEnd - ptr;</span><br><span class="line"></span><br><span class="line">                size_t outl &#x3D; key_len;</span><br><span class="line">                int ret &#x3D; EVP_PKEY_decrypt(ctx, reinterpret_cast&lt;LPBYTE&gt;(buf), &amp;outl, ptr, len);</span><br><span class="line">#if defined(_DEBUG) || defined(DEBUG)</span><br><span class="line">                if (ret &lt;&#x3D; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    unsigned long err &#x3D; ERR_get_error(); &#x2F;&#x2F;获取错误号</span><br><span class="line">                    char err_msg[1024] &#x3D; &#123; 0 &#125;;</span><br><span class="line">                    ERR_error_string(err, err_msg); &#x2F;&#x2F; 格式：error:errId:库:函数:原因</span><br><span class="line">                    printf(&quot;err msg: err:%ld, msg:%s\n&quot;, err, err_msg);</span><br><span class="line">                &#125;</span><br><span class="line">#endif</span><br><span class="line">                if (ret &gt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    de_data.append(buf, outl);</span><br><span class="line">                &#125;</span><br><span class="line">                ptr +&#x3D; len;</span><br><span class="line">            &#125;</span><br><span class="line">            delete[] buf;</span><br><span class="line"></span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (pKey)</span><br><span class="line">            EVP_PKEY_free(pKey);</span><br><span class="line">        if (ctx)</span><br><span class="line">            EVP_PKEY_CTX_free(ctx);</span><br><span class="line"></span><br><span class="line">        return de_data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;c++ 调用 openssl 3.0 生成密钥对, 加解密&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>Python原创小游戏——抓青蛙</title>
    <link href="http://v2rayhome.github.io/2024/04/08/fuli-123/"/>
    <id>http://v2rayhome.github.io/2024/04/08/fuli-123/</id>
    <published>2024-04-08T13:43:05.000Z</published>
    <updated>2024-04-08T13:47:58.359Z</updated>
    
    <content type="html"><![CDATA[<p>Python小游戏——抓青蛙</p><a id="more"></a><p>主要用到Pygame库，用于处理游戏中的图形、音频、事件等。<br>其他主要用到Python的游戏循环、随机数生成和鼠标事件处理。</p><p>python游戏源码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">import pygame</span><br><span class="line">import random</span><br><span class="line"> </span><br><span class="line">pygame.init()</span><br><span class="line"> </span><br><span class="line">window_width &#x3D; 800</span><br><span class="line">window_height &#x3D; 600</span><br><span class="line">window &#x3D; pygame.display.set_mode((window_width, window_height))</span><br><span class="line">pygame.display.set_caption(&#39;抓青蛙游戏&#39;)</span><br><span class="line"> </span><br><span class="line">white &#x3D; (255, 255, 255)</span><br><span class="line">black &#x3D; (0, 0, 0)</span><br><span class="line">green &#x3D; (0, 128, 0)</span><br><span class="line"> </span><br><span class="line">mole_radius &#x3D; 20</span><br><span class="line">mole_x &#x3D; random.randint(mole_radius, window_width - mole_radius)</span><br><span class="line">mole_y &#x3D; random.randint(mole_radius + 100, window_height - mole_radius)</span><br><span class="line">ear_radius &#x3D; 5</span><br><span class="line"> </span><br><span class="line">score &#x3D; 0</span><br><span class="line">clock &#x3D; pygame.time.Clock()</span><br><span class="line">spawn_timer &#x3D; 0</span><br><span class="line">spawn_delay &#x3D; 1500  # 1.5秒</span><br><span class="line"> </span><br><span class="line"># 显示得分</span><br><span class="line">def show_score():</span><br><span class="line">    font &#x3D; pygame.font.SysFont(None, 36)</span><br><span class="line">    score_text &#x3D; font.render(f&#39;Score: &#123;score&#125;&#39;, True, black)</span><br><span class="line">    window.blit(score_text, (10, 10))</span><br><span class="line"> </span><br><span class="line"># 绘制青蛙</span><br><span class="line">def draw_mole():</span><br><span class="line">    pygame.draw.circle(window, green, (mole_x, mole_y), mole_radius)</span><br><span class="line">    pygame.draw.circle(window, black, (mole_x - mole_radius&#x2F;&#x2F;2, mole_y - mole_radius&#x2F;&#x2F;2 - ear_radius), ear_radius)</span><br><span class="line">    pygame.draw.circle(window, black, (mole_x + mole_radius&#x2F;&#x2F;2, mole_y - mole_radius&#x2F;&#x2F;2 - ear_radius), ear_radius)</span><br><span class="line"> </span><br><span class="line"># 显示青蛙</span><br><span class="line">def show_objects():</span><br><span class="line">    window.fill(white)</span><br><span class="line">    draw_mole()</span><br><span class="line">    pygame.draw.circle(window, black, pygame.mouse.get_pos(), 20)</span><br><span class="line">    show_score()</span><br><span class="line">    pygame.display.update()</span><br><span class="line"> </span><br><span class="line"># 绘制锤子</span><br><span class="line">def draw_hammer(position):</span><br><span class="line">    pygame.draw.circle(window, hammer_color, position, hammer_radius, 3)</span><br><span class="line"> </span><br><span class="line"># 主循环</span><br><span class="line">running &#x3D; True</span><br><span class="line">while running:</span><br><span class="line">    for event in pygame.event.get():</span><br><span class="line">        if event.type &#x3D;&#x3D; pygame.QUIT:</span><br><span class="line">            running &#x3D; False</span><br><span class="line"> </span><br><span class="line">    spawn_timer +&#x3D; clock.get_time()</span><br><span class="line">    if spawn_timer &gt;&#x3D; spawn_delay:</span><br><span class="line">        mole_x &#x3D; random.randint(mole_radius, window_width - mole_radius)</span><br><span class="line">        mole_y &#x3D; random.randint(mole_radius + 100, window_height - mole_radius)</span><br><span class="line">        spawn_timer &#x3D; 0</span><br><span class="line"> </span><br><span class="line">    mouse_x, mouse_y &#x3D; pygame.mouse.get_pos()</span><br><span class="line">    if pygame.mouse.get_pressed()[0]:</span><br><span class="line">        if (mole_x - mouse_x)**2 + (mole_y - mouse_y)**2 &lt;&#x3D; mole_radius**2:</span><br><span class="line">            score +&#x3D; 1</span><br><span class="line">            mole_x &#x3D; random.randint(mole_radius, window_width - mole_radius)</span><br><span class="line">            mole_y &#x3D; random.randint(mole_radius + 100, window_height - mole_radius)</span><br><span class="line"> </span><br><span class="line">    show_objects()</span><br><span class="line">    clock.tick(60)</span><br><span class="line"> </span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Python小游戏——抓青蛙&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>全网最新——免费PDF文字发票信息提取重命名软件</title>
    <link href="http://v2rayhome.github.io/2024/04/08/d-42/"/>
    <id>http://v2rayhome.github.io/2024/04/08/d-42/</id>
    <published>2024-04-08T13:38:26.000Z</published>
    <updated>2024-04-08T13:42:28.649Z</updated>
    
    <content type="html"><![CDATA[<p>PDF文字发票信息提取重命名软件源码</p><a id="more"></a><p>基于python+tkinter 写的桌面软件，可以免费使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br></pre></td><td class="code"><pre><span class="line">import tkinter as tk</span><br><span class="line">from tkinter import filedialog, messagebox, ttk, Toplevel, StringVar, Checkbutton, Button</span><br><span class="line">import logging</span><br><span class="line">import pdfplumber</span><br><span class="line">import re</span><br><span class="line">import os</span><br><span class="line">import subprocess</span><br><span class="line">import xlwt</span><br><span class="line">pdf_files_folder &#x3D; None</span><br><span class="line"> </span><br><span class="line"># 配置日志记录</span><br><span class="line">logging.basicConfig(filename&#x3D;&#39;app.log&#39;,</span><br><span class="line">                    filemode&#x3D;&#39;w&#39;,</span><br><span class="line">                    format&#x3D;&#39;%(name)s - %(levelname)s - %(message)s&#39;,</span><br><span class="line">                    level&#x3D;logging.INFO)</span><br><span class="line"> </span><br><span class="line">reverse &#x3D; False</span><br><span class="line">#定义排序函数</span><br><span class="line">def sorter(tree, column, data_type, reverse):</span><br><span class="line">    l &#x3D; [(tree.set(k, column), k) for k in tree.get_children(&#39;&#39;)]</span><br><span class="line">    if data_type &#x3D;&#x3D; &#39;num&#39;:</span><br><span class="line">        try:</span><br><span class="line">            l &#x3D; [(float(x), k) for x, k in l]</span><br><span class="line">        except ValueError as e:</span><br><span class="line">            pass</span><br><span class="line">    l.sort(reverse&#x3D;reverse)</span><br><span class="line"> </span><br><span class="line">    for index, (val, k) in enumerate(l):</span><br><span class="line">        tree.move(k, &#39;&#39;, index)</span><br><span class="line"> </span><br><span class="line">def column_sorter(tree, column, data_type&#x3D;&#39;str&#39;):</span><br><span class="line">    global reverse</span><br><span class="line">    reverse &#x3D; not reverse</span><br><span class="line">    sorter(tree, column, data_type, reverse)</span><br><span class="line">def read_pdf_content(file_path):</span><br><span class="line">    logging.info(&#39;开始函数 read_pdf_content&#39;)</span><br><span class="line">    with pdfplumber.open(file_path) as pdf:</span><br><span class="line">        full_text &#x3D; &quot;&quot;.join(page.extract_text() for page in pdf.pages)</span><br><span class="line">        invoice_number &#x3D; re.findall(r&#39;(?:发票号码)\s*[：:]*\s*([^\s]+)&#39;, full_text)</span><br><span class="line">        name &#x3D; re.findall(r&#39;(?:名称|名\s&#123;1&#125;称|名\s&#123;1&#125;称\s&#123;1&#125;：)\s*[：:]*\s*([^\s]+)&#39;, full_text)</span><br><span class="line">        date &#x3D; re.findall(r&#39;\d\s*\d\s*\d\s*\d\s*年\s*\d\s*\d?\s*月\s*\d\s*\d?\s*日&#39;, full_text)</span><br><span class="line">        category &#x3D; re.findall(r&#39;\*([\u4e00-\u9fa5a-zA-Z]+)\*([\u4e00-\u9fa5a-zA-Z]+)&#39;, full_text)</span><br><span class="line">    logging.info(&#39;结束函数 read_pdf_content&#39;)</span><br><span class="line">    return &#123;</span><br><span class="line">            &quot;text&quot;: full_text, </span><br><span class="line">            &quot;invoice_number&quot;: invoice_number[0] if invoice_number else &quot;&quot;, </span><br><span class="line">            &quot;name&quot;: name[0] if name else &quot;&quot;, </span><br><span class="line">            &quot;date&quot;: date[0] if date else &quot;&quot;,</span><br><span class="line">            &quot;category&quot;: category if category else []</span><br><span class="line">           &#125;</span><br><span class="line"> </span><br><span class="line">def get_pdf_files(pdf_dir):</span><br><span class="line">    logging.info(&#39;Starting function get_pdf_files&#39;)</span><br><span class="line">    pdf_files &#x3D; []</span><br><span class="line">    for root, dirs, files in os.walk(pdf_dir):</span><br><span class="line">        for file in files:</span><br><span class="line">            if file.endswith(&quot;.pdf&quot;):</span><br><span class="line">                # 在此处对文件路径进行处理，确保路径格式正确</span><br><span class="line">                filepath &#x3D; os.path.normpath(os.path.join(root, file))</span><br><span class="line">                pdf_files.append(filepath)</span><br><span class="line">    logging.info(f&#39;Finished function get_pdf_files. Found &#123;len(pdf_files)&#125; pdf files.&#39;)</span><br><span class="line">    return pdf_files</span><br><span class="line"> </span><br><span class="line">def rename_pdf_file(file_path, new_value):</span><br><span class="line">    logging.info(&#39;Starting function rename_pdf_file&#39;)</span><br><span class="line">    dir_path &#x3D; os.path.dirname(file_path)</span><br><span class="line">    new_file_name &#x3D; f&quot;&#123;new_value&#125;.pdf&quot;</span><br><span class="line">    new_file_path &#x3D; os.path.join(dir_path, new_file_name)</span><br><span class="line">    os.rename(file_path, new_file_path)</span><br><span class="line">    logging.info(f&#39;Finished function rename_pdf_file. File &#123;file_path&#125; renamed to &#123;new_file_path&#125;&#39;)</span><br><span class="line">    return new_file_path</span><br><span class="line"> </span><br><span class="line"># Your remaining function definitions and script body here...</span><br><span class="line"># Don&#39;t forget to add logging statements to the rest of your functions and to your script body.</span><br><span class="line"> </span><br><span class="line">def sort_amount(tree, prev_sort&#x3D;None):</span><br><span class="line">    if prev_sort is None:</span><br><span class="line">        prev_sort &#x3D; &#123;&quot;column&quot;: &quot;Amount&quot;, &quot;reverse&quot;: False&#125;</span><br><span class="line"> </span><br><span class="line">    tree_items &#x3D; tree.get_children()</span><br><span class="line">    reverse &#x3D; not prev_sort[&quot;reverse&quot;] if prev_sort[&quot;column&quot;] &#x3D;&#x3D; &quot;Amount&quot; else False</span><br><span class="line"> </span><br><span class="line">    # 排序并更新序号</span><br><span class="line">    sorted_items &#x3D; sorted(tree_items, key&#x3D;lambda item: float(tree.set(item, &quot;Amount&quot;)), reverse&#x3D;reverse)</span><br><span class="line">    for index, item in enumerate(sorted_items, start&#x3D;1):</span><br><span class="line">        tree.move(item, &#39;&#39;, index - 1)</span><br><span class="line">        tree.item(item, values&#x3D;(index, *tree.item(item, &quot;values&quot;)[1:]))</span><br><span class="line"> </span><br><span class="line">    prev_sort[&quot;column&quot;] &#x3D; &quot;Amount&quot;</span><br><span class="line">    prev_sort[&quot;reverse&quot;] &#x3D; reverse</span><br><span class="line">    return prev_sort</span><br><span class="line"> </span><br><span class="line">def open_pdf(path):</span><br><span class="line">    if os.name &#x3D;&#x3D; &#39;nt&#39;: # For Windows</span><br><span class="line">        os.startfile(path)</span><br><span class="line">    else: # For MacOS and Linux</span><br><span class="line">        opener &#x3D; &#39;open&#39; if os.name &#x3D;&#x3D; &#39;posix&#39; else &#39;xdg-open&#39;</span><br><span class="line">        subprocess.call([opener, path])</span><br><span class="line">         </span><br><span class="line">def display_results(values, total_amount, input_root):</span><br><span class="line">    # 输入界面的根窗口销毁</span><br><span class="line">    input_root.destroy()</span><br><span class="line"> </span><br><span class="line">    # 创建新的根窗口</span><br><span class="line">    root &#x3D; tk.Tk()</span><br><span class="line">    root.title(&quot;发票金额统计&quot;)</span><br><span class="line">    center_window(root, width&#x3D;950, height&#x3D;300)</span><br><span class="line"> </span><br><span class="line">    # 主框架设置</span><br><span class="line">    main_frame &#x3D; ttk.Frame(root, padding&#x3D;&quot;10 10 10 10&quot;)</span><br><span class="line">    main_frame.grid(column&#x3D;0, row&#x3D;0, sticky&#x3D;(tk.W, tk.E, tk.N, tk.S))</span><br><span class="line">    main_frame.columnconfigure(0, weight&#x3D;1)</span><br><span class="line">    main_frame.rowconfigure(0, weight&#x3D;1)</span><br><span class="line"> </span><br><span class="line">    # 定义重命名选中文件的功能</span><br><span class="line">    def rename_selected_files():</span><br><span class="line">        from tkinter import Toplevel, StringVar, Checkbutton, Button</span><br><span class="line"> </span><br><span class="line">        selected_items &#x3D; tree.selection()</span><br><span class="line">        if not selected_items:</span><br><span class="line">            messagebox.showerror(&quot;错误&quot;, &quot;请先选择一个或多个PDF文件进行重命名&quot;)</span><br><span class="line">            return</span><br><span class="line">         </span><br><span class="line">        # 创建对话框并注册变量</span><br><span class="line">        dialog &#x3D; Toplevel(root)</span><br><span class="line">        dialog.title(&quot;选择需要的字段&quot;)</span><br><span class="line">         </span><br><span class="line">        include_amount &#x3D; StringVar(value&#x3D;&#39;no&#39;)</span><br><span class="line">        include_category &#x3D; StringVar(value&#x3D;&#39;no&#39;)</span><br><span class="line">        include_invoice_number &#x3D; StringVar(value&#x3D;&#39;no&#39;)</span><br><span class="line">        include_name &#x3D; StringVar(value&#x3D;&#39;no&#39;)</span><br><span class="line"> </span><br><span class="line">        Checkbutton(dialog, text&#x3D;&#39;金额&#39;, variable&#x3D;include_amount, onvalue&#x3D;&#39;yes&#39;, offvalue&#x3D;&#39;no&#39;, anchor&#x3D;&#39;w&#39;).pack(fill&#x3D;&#39;x&#39;)</span><br><span class="line">        Checkbutton(dialog, text&#x3D;&#39;类别&#39;, variable&#x3D;include_category, onvalue&#x3D;&#39;yes&#39;, offvalue&#x3D;&#39;no&#39;, anchor&#x3D;&#39;w&#39;).pack(fill&#x3D;&#39;x&#39;)</span><br><span class="line">        Checkbutton(dialog, text&#x3D;&#39;发票号码&#39;, variable&#x3D;include_invoice_number, onvalue&#x3D;&#39;yes&#39;, offvalue&#x3D;&#39;no&#39;, anchor&#x3D;&#39;w&#39;).pack(fill&#x3D;&#39;x&#39;)</span><br><span class="line">        Checkbutton(dialog, text&#x3D;&#39;公司名称&#39;, variable&#x3D;include_name, onvalue&#x3D;&#39;yes&#39;, offvalue&#x3D;&#39;no&#39;, anchor&#x3D;&#39;w&#39;).pack(fill&#x3D;&#39;x&#39;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        def on_ok():</span><br><span class="line">            # 对话框确定按钮的回调函数</span><br><span class="line">            for item in selected_items:</span><br><span class="line">                print(f&quot;Processing item: &#123;item&#125;&quot;)</span><br><span class="line">                item_values &#x3D; tree.item(item, &#39;values&#39;)</span><br><span class="line">                new_name_parts &#x3D; []</span><br><span class="line">                if include_amount.get() &#x3D;&#x3D; &#39;yes&#39;:</span><br><span class="line">                    new_name_parts.append(item_values[1])</span><br><span class="line">                if include_category.get() &#x3D;&#x3D; &#39;yes&#39;:</span><br><span class="line">                    new_name_parts.append(item_values[5])  # Category</span><br><span class="line">                if include_invoice_number.get() &#x3D;&#x3D; &#39;yes&#39;:</span><br><span class="line">                    new_name_parts.append(item_values[2])  # Invoice Number</span><br><span class="line">                if include_name.get() &#x3D;&#x3D; &#39;yes&#39;:</span><br><span class="line">                    new_name_parts.append(item_values[3])  # Name</span><br><span class="line">                 </span><br><span class="line">                if not new_name_parts:  # 如果用户没有选择任何字段，显示错误信息</span><br><span class="line">                    messagebox.showerror(&quot;错误&quot;, &quot;至少需要选择一个字段来重命名文件。&quot;)</span><br><span class="line">                    dialog.destroy()</span><br><span class="line">                    return</span><br><span class="line"> </span><br><span class="line">                new_file_name &#x3D; &quot;_&quot;.join(new_name_parts) </span><br><span class="line">                current_file_path &#x3D; item_values[6]  # 原始的pdf路径</span><br><span class="line">                new_file_path &#x3D; rename_pdf_file(current_file_path, new_file_name)</span><br><span class="line">                tree.set(item, column&#x3D;&quot;文件路径&quot;, value&#x3D;new_file_path)</span><br><span class="line"> </span><br><span class="line">            messagebox.showinfo(&quot;完成&quot;, &quot;选中的文件已重命名。&quot;)</span><br><span class="line">            dialog.destroy()</span><br><span class="line"> </span><br><span class="line">        Button(dialog, text&#x3D;&#39;确定&#39;, command&#x3D;on_ok).pack()</span><br><span class="line"> </span><br><span class="line">        dialog.update_idletasks()</span><br><span class="line">        width &#x3D; dialog.winfo_reqwidth()</span><br><span class="line">        height &#x3D; dialog.winfo_reqheight()</span><br><span class="line">        x &#x3D; (root.winfo_screenwidth() &#x2F;&#x2F; 2) - (width &#x2F;&#x2F; 2)</span><br><span class="line">        y &#x3D; (root.winfo_screenheight() &#x2F;&#x2F; 2) - (height &#x2F;&#x2F; 2)</span><br><span class="line">        dialog.geometry(&#39;+&#123;&#125;+&#123;&#125;&#39;.format(x, y))</span><br><span class="line"> </span><br><span class="line">        dialog.transient(root)  </span><br><span class="line">        dialog.grab_set()</span><br><span class="line">        dialog.wait_window()  # 等待对话框关闭</span><br><span class="line">     </span><br><span class="line">    def export_to_xls():</span><br><span class="line">        global pdf_files_folder</span><br><span class="line">        if pdf_files_folder is None:</span><br><span class="line">            messagebox.showerror(&quot;错误&quot;, &quot;PDF文件目录未设置。&quot;)</span><br><span class="line">            return</span><br><span class="line">        xls_file_path &#x3D; os.path.join(pdf_files_folder, &#39;发票数据.xls&#39;)</span><br><span class="line">        # 创建一个Workbook对象</span><br><span class="line">        workbook &#x3D; xlwt.Workbook()</span><br><span class="line">        # 添加一个sheet</span><br><span class="line">        sheet &#x3D; workbook.add_sheet(&#39;发票数据&#39;)</span><br><span class="line">        sheet.col(0).width &#x3D; 256 * 5  # 序号列设为20个字符宽度</span><br><span class="line">        sheet.col(1).width &#x3D; 256 * 10  # 金额列</span><br><span class="line">        sheet.col(2).width &#x3D; 256 * 30  # 发票号码列</span><br><span class="line">        sheet.col(3).width &#x3D; 256 * 30  # 公司列</span><br><span class="line">        sheet.col(4).width &#x3D; 256 * 20  # 开票日期列</span><br><span class="line">        sheet.col(5).width &#x3D; 256 * 25  # 类别列</span><br><span class="line">        sheet.col(6).width &#x3D; 256 * 10  # 文件路径列</span><br><span class="line">         </span><br><span class="line">        style &#x3D; xlwt.easyxf(&#39;align: vert centre, horiz centre&#39;)</span><br><span class="line">        # 将Treeview列标题写入sheet的第一行</span><br><span class="line">        for i, header in enumerate(headers):</span><br><span class="line">            sheet.write(0, i, header, style)</span><br><span class="line"> </span><br><span class="line">        # 写入数据</span><br><span class="line">        for i, item in enumerate(tree.get_children(), start&#x3D;1):</span><br><span class="line">            # 获取每一行的数据</span><br><span class="line">            row_values &#x3D; tree.item(item, &#39;values&#39;)</span><br><span class="line">            for j, value in enumerate(row_values):</span><br><span class="line">                # 假设你想将所有的单元格格式设置为文本，请确保这里的value是字符串</span><br><span class="line">                sheet.write(i, j, str(value), style) # 写入数据，注意i是从1开始的因为0是标题行</span><br><span class="line"> </span><br><span class="line">        # 保存xls文件</span><br><span class="line">        workbook.save(xls_file_path)</span><br><span class="line">        messagebox.showinfo(&quot;完成&quot;, f&quot;数据成功导出至 &#39;&#123;xls_file_path&#125;&#39; 文件。&quot;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    # 定义复制总金额到剪贴板的功能</span><br><span class="line">    def copy_total_amount_to_clipboard(total_amount):</span><br><span class="line">        root.clipboard_clear()</span><br><span class="line">        root.clipboard_append(f&quot;&#123;total_amount:.2f&#125;&quot;)</span><br><span class="line"> </span><br><span class="line">    # 树视图设置</span><br><span class="line">    tree &#x3D; ttk.Treeview(main_frame, columns&#x3D;(&quot;序号&quot;, &quot;金额&quot;, &quot;发票号码&quot;, &quot;公司&quot;, &quot;开票日期&quot;, &quot;类别&quot;, &quot;文件路径&quot;), show&#x3D;&quot;headings&quot;)</span><br><span class="line"> </span><br><span class="line">    tree.grid(column&#x3D;0, row&#x3D;0, pady&#x3D;5, padx&#x3D;5, sticky&#x3D;(tk.N, tk.S, tk.E, tk.W))</span><br><span class="line">    tree.bind(&#39;&lt;Double-1&gt;&#39;, lambda event: open_pdf(tree.item(tree.selection())[&#39;values&#39;][6]))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    # 默认的列宽和标题设置</span><br><span class="line">    columns &#x3D; (&quot;序号&quot;, &quot;金额&quot;, &quot;发票号码&quot;, &quot;公司&quot;, &quot;开票日期&quot;, &quot;类别&quot;, &quot;文件路径&quot;)</span><br><span class="line">    headers &#x3D; (&quot;序号&quot;, &quot;金额&quot;, &quot;发票号码&quot;, &quot;公司&quot;, &quot;开票日期&quot;, &quot;类别&quot;, &quot;文件路径&quot;)</span><br><span class="line">    column_widths &#x3D; &#123;&quot;序号&quot;: 50, &quot;金额&quot;: 100, &quot;发票号码&quot;: 200, &quot;公司&quot;: 180, &quot;开票日期&quot;: 100, &quot;类别&quot;: 100, &quot;文件路径&quot;: 50&#125;</span><br><span class="line">    for col in tree[&#39;columns&#39;]:</span><br><span class="line">        # 使用列的名字作为键来从字典中获取列的宽度</span><br><span class="line">        tree.column(col, width&#x3D;column_widths[col])</span><br><span class="line">        tree.heading(col, text&#x3D;col)</span><br><span class="line">        tree.column(col, anchor&#x3D;&#39;center&#39;) </span><br><span class="line"> </span><br><span class="line">    # 插入数据到树视图</span><br><span class="line">    for index, value in enumerate(values, start&#x3D;1):</span><br><span class="line">        tree.insert(&quot;&quot;, &quot;end&quot;, values&#x3D;(index, *value))</span><br><span class="line"> </span><br><span class="line">    # 右侧按钮容器</span><br><span class="line">    button_frame &#x3D; ttk.Frame(main_frame)</span><br><span class="line">    button_frame.grid(column&#x3D;1, row&#x3D;0, padx&#x3D;5, sticky&#x3D;(tk.N, tk.S))</span><br><span class="line"> </span><br><span class="line">    button_frame.rowconfigure(0, weight&#x3D;1)</span><br><span class="line">    button_frame.rowconfigure(1, weight&#x3D;1)</span><br><span class="line">    button_frame.rowconfigure(2, weight&#x3D;1)</span><br><span class="line">    button_frame.rowconfigure(3, weight&#x3D;1)</span><br><span class="line"> </span><br><span class="line">    # 创建按钮并添加到右侧按钮容器</span><br><span class="line">    rename_button &#x3D; ttk.Button(button_frame, text&#x3D;&quot;重命名选中文件&quot;, command&#x3D;rename_selected_files)</span><br><span class="line">    rename_button.grid(column&#x3D;0, row&#x3D;0, pady&#x3D;5, sticky&#x3D;(tk.N, tk.S))</span><br><span class="line"> </span><br><span class="line">    copy_button &#x3D; ttk.Button(button_frame, text&#x3D;&quot;复制总金额&quot;, command&#x3D;lambda: copy_total_amount_to_clipboard(total_amount))</span><br><span class="line">    copy_button.grid(column&#x3D;0, row&#x3D;1, pady&#x3D;5, sticky&#x3D;(tk.N, tk.S))</span><br><span class="line">     </span><br><span class="line">    export_button &#x3D; ttk.Button(button_frame, text&#x3D;&quot;导出到XLS&quot;, command&#x3D;export_to_xls)</span><br><span class="line">    export_button.grid(column&#x3D;0, row&#x3D;2, pady&#x3D;5, sticky&#x3D;(tk.N, tk.S))  # 注意：row的索引是3，因为我们已经有三个按钮了</span><br><span class="line"> </span><br><span class="line">    exit_button &#x3D; ttk.Button(button_frame, text&#x3D;&quot;退出&quot;, command&#x3D;root.destroy)</span><br><span class="line">    exit_button.grid(column&#x3D;0, row&#x3D;3, pady&#x3D;5, sticky&#x3D;(tk.N, tk.S))</span><br><span class="line">    # 累计金额标签</span><br><span class="line">    total_amount_label &#x3D; ttk.Label(main_frame, text&#x3D;f&quot;所有发票的累计金额: &#123;total_amount:.2f&#125;&quot;)</span><br><span class="line">    total_amount_label.grid(column&#x3D;0, row&#x3D;1, pady&#x3D;5, sticky&#x3D;tk.W)</span><br><span class="line"> </span><br><span class="line">    # 启动事件循环前更新窗口</span><br><span class="line">    root.update()</span><br><span class="line"> </span><br><span class="line">    # 启动事件循环</span><br><span class="line">    root.mainloop()</span><br><span class="line"> </span><br><span class="line">    logging.info(&#39;Exited main loop&#39;)</span><br><span class="line">    def copy_total_amount_to_clipboard():</span><br><span class="line">        root.clipboard_clear()</span><br><span class="line">        root.clipboard_append(f&quot;&#123;total_amount:.2f&#125;&quot;)</span><br><span class="line"> </span><br><span class="line">    root.mainloop()</span><br><span class="line">    logging.info(&#39;Exited main loop&#39;)</span><br><span class="line">tree &#x3D; None</span><br><span class="line">root &#x3D; None</span><br><span class="line">def resize_treeview_columns(event):</span><br><span class="line">    global tree, root</span><br><span class="line">    new_width &#x3D; event.width</span><br><span class="line">    tree.column(&quot;Index&quot;, width&#x3D;int(new_width*0.05), anchor&#x3D;tk.CENTER)</span><br><span class="line">    tree.column(&quot;Amount&quot;, width&#x3D;int(new_width*0.05), anchor&#x3D;tk.CENTER)</span><br><span class="line">    tree.column(&quot;Invoice Number&quot;, width&#x3D;int(new_width*0.15), anchor&#x3D;tk.CENTER)</span><br><span class="line">    tree.column(&quot;Name&quot;, width&#x3D;int(new_width*0.15), anchor&#x3D;tk.CENTER)</span><br><span class="line">    tree.column(&quot;Date&quot;, width&#x3D;int(new_width*0.1), anchor&#x3D;tk.CENTER)</span><br><span class="line">    tree.column(&quot;Category&quot;, width&#x3D;int(new_width*0.15), anchor&#x3D;tk.CENTER)</span><br><span class="line">    tree.column(&quot;Renamed File&quot;, width&#x3D;int(new_width*0.15), anchor&#x3D;tk.CENTER)</span><br><span class="line">    tree.update_idletasks()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    total_amount_label &#x3D; ttk.Label(main_frame, text&#x3D;f&quot;所有发票的累计金额: &#123;total_amount:.2f&#125;&quot;)</span><br><span class="line">    total_amount_label.grid(column&#x3D;0, row&#x3D;1, pady&#x3D;5, sticky&#x3D;tk.W)</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">    def copy_total_amount_to_clipboard():</span><br><span class="line">        root.clipboard_clear()</span><br><span class="line">        root.clipboard_append(total_amount_label[&quot;text&quot;].split(&quot;: &quot;)[1])</span><br><span class="line"> </span><br><span class="line">    copy_button &#x3D; ttk.Button(main_frame, text&#x3D;&quot;复制总金额&quot;, command&#x3D;copy_total_amount_to_clipboard)</span><br><span class="line">    copy_button.grid(column&#x3D;1, row&#x3D;1, pady&#x3D;5, padx&#x3D;5, sticky&#x3D;tk.W)</span><br><span class="line"> </span><br><span class="line">    ttk.Button(main_frame, text&#x3D;&quot;退出&quot;, command&#x3D;root.destroy).grid(column&#x3D;1, row&#x3D;2, pady&#x3D;10, sticky&#x3D;tk.E)</span><br><span class="line"> </span><br><span class="line">    root.columnconfigure(0, weight&#x3D;1)</span><br><span class="line">    root.rowconfigure(0, weight&#x3D;1)</span><br><span class="line">    root.mainloop()</span><br><span class="line">     </span><br><span class="line">def center_window(root, width&#x3D;420, height&#x3D;100):</span><br><span class="line">    screen_width &#x3D; root.winfo_screenwidth()</span><br><span class="line">    screen_height &#x3D; root.winfo_screenheight()</span><br><span class="line"> </span><br><span class="line">    x &#x3D; (screen_width - width) &#x2F;&#x2F; 2</span><br><span class="line">    y &#x3D; (screen_height - height) &#x2F;&#x2F; 2</span><br><span class="line"> </span><br><span class="line">    root.geometry(f&quot;&#123;width&#125;x&#123;height&#125;+&#123;x&#125;+&#123;y&#125;&quot;)</span><br><span class="line"> </span><br><span class="line">     </span><br><span class="line">def browse_folder(entry):</span><br><span class="line">    folder &#x3D; filedialog.askdirectory(title&#x3D;&quot;请选择发票PDF文件夹路径&quot;)</span><br><span class="line">    if folder:</span><br><span class="line">        entry.delete(0, tk.END)</span><br><span class="line">        entry.insert(0, folder)</span><br><span class="line"> </span><br><span class="line">def start_processing(entry, input_root):</span><br><span class="line">    logging.info(&#39;Start processing&#39;)</span><br><span class="line">    folder &#x3D; entry.get()</span><br><span class="line">    if not folder:</span><br><span class="line">        messagebox.showerror(&quot;错误&quot;, &quot;请先选择或输入一个文件夹路径&quot;)</span><br><span class="line">        return</span><br><span class="line"> </span><br><span class="line">    global pdf_files_folder</span><br><span class="line">    pdf_files &#x3D; get_pdf_files(folder)</span><br><span class="line">    if pdf_files:</span><br><span class="line">        pdf_files_folder &#x3D; os.path.dirname(pdf_files[0]) </span><br><span class="line"> </span><br><span class="line">    values &#x3D; []</span><br><span class="line">    renamed_pdf_files &#x3D; []</span><br><span class="line"> </span><br><span class="line">    for pdf_file in pdf_files:</span><br><span class="line">        pdf_content &#x3D; read_pdf_content(pdf_file)</span><br><span class="line">        pdf_text &#x3D; pdf_content[&quot;text&quot;]</span><br><span class="line">        pattern &#x3D; r&#39;[&amp;#165;￥](\d+(?:\.\d&#123;1,2&#125;)?)&#39;</span><br><span class="line">        result &#x3D; re.findall(pattern, pdf_text)</span><br><span class="line">         </span><br><span class="line">        if result:</span><br><span class="line">            max_value &#x3D; max([float(i) for i in result])</span><br><span class="line">            values.append((max_value, </span><br><span class="line">                           pdf_content[&quot;invoice_number&quot;], </span><br><span class="line">                           pdf_content[&quot;name&quot;], </span><br><span class="line">                           pdf_content[&quot;date&quot;], </span><br><span class="line">                           pdf_content[&quot;category&quot;],</span><br><span class="line">                           pdf_file))  # 将原始pdf路径保存而不是重命名后的路径</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    logging.info(f&#39;Values: &#123;values&#125;&#39;)</span><br><span class="line">    logging.info(f&#39;Renamed pdf files: &#123;renamed_pdf_files&#125;&#39;)</span><br><span class="line">     </span><br><span class="line">    # Extract the first element of each tuple in values</span><br><span class="line">    amounts &#x3D; [value[0] for value in values]</span><br><span class="line">     </span><br><span class="line">    total_amount &#x3D; sum(amounts)</span><br><span class="line"> </span><br><span class="line">    logging.info(f&#39;Total amount: &#123;total_amount&#125;&#39;)</span><br><span class="line">    logging.info(&#39;Calling display_results function&#39;)</span><br><span class="line">     </span><br><span class="line">    display_results(values, total_amount, input_root)</span><br><span class="line">     </span><br><span class="line">    logging.info(&#39;Finished processing&#39;)</span><br><span class="line"> </span><br><span class="line">def main():</span><br><span class="line">    logging.info(&#39;Application start&#39;)</span><br><span class="line">    root &#x3D; tk.Tk()</span><br><span class="line">    root.title(&quot;发票金额统计&quot;)</span><br><span class="line"> </span><br><span class="line">    center_window(root)</span><br><span class="line"> </span><br><span class="line">    main_frame &#x3D; ttk.Frame(root, padding&#x3D;&quot;10 10 10 10&quot;)</span><br><span class="line">    main_frame.grid(column&#x3D;0, row&#x3D;0, sticky&#x3D;(tk.W, tk.E, tk.N, tk.S))</span><br><span class="line"> </span><br><span class="line">    folder_entry &#x3D; ttk.Entry(main_frame, width&#x3D;40)</span><br><span class="line">    folder_entry.grid(column&#x3D;0, row&#x3D;0, padx&#x3D;5, pady&#x3D;5, sticky&#x3D;tk.W)</span><br><span class="line"> </span><br><span class="line">    browse_button &#x3D; ttk.Button(main_frame, text&#x3D;&quot;打开&quot;, command&#x3D;lambda: browse_folder(folder_entry))</span><br><span class="line">    browse_button.grid(column&#x3D;1, row&#x3D;0, padx&#x3D;5, pady&#x3D;5, sticky&#x3D;tk.W)</span><br><span class="line"> </span><br><span class="line">    start_button &#x3D; ttk.Button(main_frame, text&#x3D;&quot;开始处理&quot;, command&#x3D;lambda: start_processing(folder_entry, root))</span><br><span class="line">    start_button.grid(column&#x3D;1, row&#x3D;1, padx&#x3D;5, pady&#x3D;5, sticky&#x3D;tk.W)</span><br><span class="line"> </span><br><span class="line">    root.columnconfigure(0, weight&#x3D;1)</span><br><span class="line">    root.rowconfigure(0, weight&#x3D;1)</span><br><span class="line">    root.mainloop()</span><br><span class="line">logging.info(&#39;Application finished&#39;)</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;PDF文字发票信息提取重命名软件源码&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>图片无损压缩工具Imagine 1.5.2官方绿色版</title>
    <link href="http://v2rayhome.github.io/2024/04/08/soft-53/"/>
    <id>http://v2rayhome.github.io/2024/04/08/soft-53/</id>
    <published>2024-04-08T13:31:15.000Z</published>
    <updated>2024-04-08T13:38:00.153Z</updated>
    
    <content type="html"><![CDATA[<p>Imagine是来自韩国的多国语言版（包括简体和繁体中文）图片浏览器，以1MB左右的大小包含了非常多的图像处理功能，具有批量转换图像格式、屏幕截图、制作gif图片动画、创建tif多页图像等功能，图像查看，精简优化绿色&amp;单文件版，集成WebP插件，软件启动默认界面为简体中文，无广告，是Windows&amp;WinPE 必备看图工具。</p><p>v1.5.2，2024年3月27日<br>– 修复：文件列表开头或结尾出现不支持问题<br>– 修复：修复 XBM/XPM 文件安全漏洞</p><p>Imagine还是一款开源的图片压缩转换工具，支持JPG、PNG、JPEG等格式的压缩，完全纯净免费，Imagine的界面非常简洁，导入图片或者直接拖动图片到软件上面可以操作了。<br>要想将图片无损压缩，是指在不影响图片质量的前提下，将图片的文件大小做到最小，使用Imagine软件进行想象图片无损压缩很简单，只需按照以下步骤即可：</p><ol><li>打开Imagine软件，并将需要压缩的图片加载进来；</li><li>选择“文件”-&gt; “保存为”，在弹出的对话框中选择需要保存的压缩格式；</li><li>在弹出的对话框中设置压缩率，点击“保存”即可完成压缩。<br>另存为-选项-Quality 或 Level 输入数值</li></ol><p><img src="https://s2.loli.net/2024/04/08/yxKDu9BGUZhsPRw.png" alt="image.png"></p><p>支持格式列表：</p><p>1.支持多种图像/动画文件格式：<br>PNG，JPG，GIF，BMP，PCX，TGA，TIFF，ICO，CUR，LBM，ANI，FLI，WMF，EMF等。<br>2.支持数码相机原始图像文件格式：<br>3FR，ARW，CR2，CRW，DNG，ERF，KDC，MRW，NEF，ORF，RAF，RAW，SRW，SR2等<br>3.支持高动态范围图像文件格式：<br>HDR，EXR，SXR，MXR等。<br>支持WebP(Google WebP格式)文件格式(需要额外安装插件)<br>支持EXR，SXR，MXR(OpenEXR Image)文件格式(需要额外安装插件)<br>4.其他格式<br>支持多种档案文件格式：<br>ZIP，RAR，7Z，ALZ，HV3，CBZ，CBR，CB7，ARJ，LZH，EGG，TAR，ISO，CAB等。</p><p>集成插件：</p><p>7-Zip 压缩包格式插件（7Z）<br>RAR 压缩包式插件（RAR）<br>数码相机原始图像格式插件（3FR、ARW、CR2、CRW、DCR、DNG、ERF、KDC、MOS、MRW、NEF、ORF、PEF、RAF、RAW、SRW、SR2、X3F）<br>JBIG 格式插件（JBG、JBIG）<br>AVIF 格式插件（AVIF、AVIFS）<br>Google WebP 格式插件(WEBP)<br>SVG 可扩展矢量图形图像格式插件（SVG、SVGZ）<br>HEIF 格式插件（HEIF、HEIC）</p><p>使用方法：</p><pre><code>鼠标键盘基本操作：颜色信息: Ctrl+中键全屏显示: Shift+中键/Alt+Enter图像滚动上下: 鼠标滚轮/↑/↓上一个图像: Ctrl+左键/Ctrl+上滚/Backspace/←下一个图像: Ctrl+右键/Ctrl+下滚/Space/→最前一个图像:Shift+左键/Home最后一个图像:Shift+右键/End图像向上翻页:Shift+上滚/Page Up图像向下翻页:Shift+下滚/Page Down</code></pre><p>软件特点：</p><ul><li>以极快的速度查看和保存图像/动画文件</li><li>支持多种图像 / 动画文件格式：<br>– ANI、ANM、AVIF、BMP、BPG、CDR、CLP、CUR、DCM、DCX、DDS、EMF、EXR、FLC、FLI，<br>GIF、HDP、HDR、HEIF、ICL、ICNS、ICO、JBG、JP2、JPC、JPG、JXL、LBM、MAC，<br>MBM、MNG、PBM、PCD、PCX、PDN、PGM、PIC、PNG、PPM、PSD、PSP、RAS、RLA、RLE，<br>SGI、SPR、SVG、TGA、TGS、TIF、WBMP、WEBP、WMF、WPG、XBM、XCF、XPM</li><li>支持数码相机原始图像文件格式：<br>– 3FR、ARW、CR2、CRW、DNG、ERF、KDC、MRW、NEF、ORF、RAF、RAW、SRW、SR2</li><li>支持多种压缩文件格式：<br>– ZIP、RAR、7Z、ALZ、HV3、CBZ、CBR、CB7、ARJ、LZH、EGG、TAR、ISO、CAB</li><li>支持高动态范围的图像文件格式：<br>– HDR、EXR、SXR、MXR</li><li>从动画文件中提取单个 / 所有帧</li><li>显示图像 / 动画文件的详细信息</li><li>显示Exif / ITC信息</li><li>显示或隐藏透明度</li><li>提供 64 位版本</li><li>提供 Unicode 版本</li><li>多语言支持：<br>– 英语、德语、西班牙语、俄语、丹麦语、韩语、日语、中文等。</li><li>缩略图浏览</li><li>色彩管理（ ICC 配置文件）</li><li>批量转换</li><li>幻灯片放映</li><li>批量重命名</li><li>屏幕截图</li><li>平铺视图<br>– 检查纹理以实现无缝平铺，这对游戏开发者 / 建模者非常有用</li><li>创建动画</li><li>创建多页图像</li><li>操作和编辑图像：<br>– 垂直和水平翻转<br>– 向左、向右和自由旋转<br>– 灰度<br>– 负片<br>– 更改颜色深度（1、4、8、16、24 和 32 位）<br>– 交换颜色<br>– 按像素、百分比或标准尺寸调整大小。<br>– 有几个重新采样过滤器可用。<br>– 效果过滤器，包括一个方便的预览浏览器<br>– 导入、导出和编辑选项板<br>– 设置和删除透明度</li><li>可自定义的键盘和鼠标快捷键</li><li>命令行参数支持</li><li>支持外壳扩展</li><li>支持附加插件</li><li>支持 Total Commander 列表和插件包</li><li>部写入不必要的注册表（基于 ini 的配置）</li><li>完全优化的二进制文件（微小、纯净、快速、整洁）</li></ul><p>官放网站：<a href="https://www.nyam.pe.kr/dev/imagine/">https://www.nyam.pe.kr/dev/imagine/</a></p><p>Imagine 1.5.2官方版&amp;单文件绿色版【集成WebP插件，软件启动默认界面为简体中文】下载地址：<br><a href="https://www.lanzouw.com/iFtK71t9j04d">https://www.lanzouw.com/iFtK71t9j04d</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Imagine是来自韩国的多国语言版（包括简体和繁体中文）图片浏览器，以1MB左右的大小包含了非常多的图像处理功能，具有批量转换图像格式、屏幕截图、制作gif图片动画、创建tif多页图像等功能，图像查看，精简优化绿色&amp;amp;单文件版，集成WebP插件，软件启动默认界面为简</summary>
      
    
    
    
    <category term="破解" scheme="http://v2rayhome.github.io/categories/%E7%A0%B4%E8%A7%A3/"/>
    
    
    <category term="破解" scheme="http://v2rayhome.github.io/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>openai 智能翻译神器 音视频转字幕小工具V1.2，支持上百种语言，生肉翻译神器</title>
    <link href="http://v2rayhome.github.io/2023/12/14/fuli-122/"/>
    <id>http://v2rayhome.github.io/2023/12/14/fuli-122/</id>
    <published>2023-12-14T12:46:46.000Z</published>
    <updated>2023-12-14T12:53:44.329Z</updated>
    
    <content type="html"><![CDATA[<p>音视频转字幕小工具V1.2，支持上百种语言</p><a id="more"></a><p>基于openAI的whisper的衍生项目faster whisper做成，支持100多种语言识别与翻译。</p><p>软件纯离线运行</p><ol><li>如下图</li></ol><p><img src="https://s2.loli.net/2023/12/14/1xnsmUDHTdYM6k2.png" alt="image.png"></p><ol start="2"><li>转换完成后，输出目录会有srt字幕格式和txt纯文本格式。</li></ol><ol start="3"><li>使用效果如下</li></ol><p><img src="https://s2.loli.net/2023/12/14/LR8KGzjxqMB6tIO.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;音视频转字幕小工具V1.2，支持上百种语言&lt;/p&gt;</summary>
    
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="http://v2rayhome.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>小红书作品采集工具 XHS_Downloader V1.6</title>
    <link href="http://v2rayhome.github.io/2023/12/14/d-41/"/>
    <id>http://v2rayhome.github.io/2023/12/14/d-41/</id>
    <published>2023-12-14T12:43:15.000Z</published>
    <updated>2023-12-14T12:44:55.466Z</updated>
    
    <content type="html"><![CDATA[<p>小红书作品采集工具 XHS_Downloader V1.6,开源体积小巧 </p><a id="more"></a><p><img src="https://s2.loli.net/2023/12/14/h8fVRkMldNpxOjt.png" alt="image.png"></p><p>XHS_Downloader V1.6是一款强大且开源的小红书图文/视频采集下载工具<br>实现功能:<br>1.采集获取图文/视频作品信息<br>2.下载小红书图文/视频作品<br>3.如作品已存在自动跳过<br>4.读取剪贴板实现批量下载功能</p><h1 id="小红书视频下载工具下载地址"><a href="#小红书视频下载工具下载地址" class="headerlink" title="小红书视频下载工具下载地址"></a>小红书视频下载工具下载地址</h1><p>下载地址:<a href="https://lm88.lanzouj.com/iB1Yi1hbxj0h">https://lm88.lanzouj.com/iB1Yi1hbxj0h</a> 密码52pj</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;小红书作品采集工具 XHS_Downloader V1.6,开源体积小巧 &lt;/p&gt;</summary>
    
    
    
    <category term="破解软件" scheme="http://v2rayhome.github.io/categories/%E7%A0%B4%E8%A7%A3%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="破解软件" scheme="http://v2rayhome.github.io/tags/%E7%A0%B4%E8%A7%A3%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
</feed>
